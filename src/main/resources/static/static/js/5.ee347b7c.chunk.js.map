{"version":3,"sources":["utils/percent.ts","views/Backtest/components/BacktestChart.tsx","views/Backtest/types.ts","views/Backtest/components/BacktestLayout.tsx","service/backtest.ts","views/Backtest/components/utils.ts","views/Backtest/components/BacktestQueryCard.tsx","views/Backtest/components/Common.tsx","views/Backtest/components/BacktestTabs.tsx","views/Backtest/components/StrategyList.tsx","views/Backtest/components/Backtest.tsx","views/Backtest/Home.tsx"],"names":["formatPerc","percent","precision","Number","formatNumber","BacktestChart","props","data","chartData","t","useTranslation","className","style","height","ResponsiveContainer","width","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","strokeOpacity","XAxis","dataKey","fill","fillOpacity","YAxis","domain","unit","Tooltip","contentStyle","backgroundColor","border","borderRadius","padding","labelStyle","color","fontSize","formatter","value","Area","type","activeDot","r","FeeType","FeeTypeTicks","Sider","Layout","MenuItem","icon","title","url","showArrow","onClick","history","push","borderBottom","RightOutlined","BackTestMenus","HomeOutlined","GoldOutlined","RiseOutlined","BacktestLayout","minHeight","trigger","overflow","position","borderRight","collapsible","overlay","MenuOutlined","href","sider","marginLeft","children","PageHeader","query","a","env","REACT_APP_REST_API_BASE_URL","body","JSON","stringify","fetch","method","headers","response","json","res","code","message","error","console","log","getPriceRangeConfig","gridTicks","map","range","rawTicks","Math","realTicks","round","toFixed","tick","desc","priceRangeConfig","Low","Medium","High","getThresholdConfig","factor","pow","ticks2Price","ticks","thresholdConfig","RangePicker","DatePicker","CustomOption","des","getPriceRangeOptions","config","item","index","id","label","disabled","getThresholdOptions","getRangeOptions","pair","poolsOptions","feeType","find","pool","priceOptions","thresholdOptions","BacktestQueryCard","onBacktestDataFetched","onLoading","urlParams","search","arr","URLSearchParams","get","split","length","boundaryThreshold","reBalanceThreshold","direction","timeRange","moment","days","amount0","amount1","period","formatSearchParams","useLocation","defaultPriceRangeOpts","defaultThresholdOpts","liquidityOptions","getLiquidityOptions","getStrateyOptions","defaultFormData","opts","useState","priceRangeOptions","setPriceRangeOptions","setThresholdOptions","useHistory","formData","setFormData","loading","setLoading","onSubmit","queryData","rest","startTs","unix","endTs","formatFormData2Params","startBacktest","then","useMount","Object","keys","useEffect","start","end","format","join","stringifyBacktestQuery","replace","initialValues","colon","layout","onValuesChange","changedValues","changedAttrs","Item","name","placeholder","option","Option","CustomTooltip","newTitle","overlayInnerStyle","InfoCircleOutlined","ActivityTab","logs","base","dataSource","time","price","liquidity","abs","token0","token1","im","gasFee","getBalanceNumber","BigNumber","times","gasPrice","fees","size","pagination","defaultPageSize","columns","getActivityColumns","profitRender","record","number","percentRender","tsRender","formatTime","Date","TypeRender","textTransform","dataIndex","key","render","StrategyFeatures","DatabaseOutlined","ClockCircleOutlined","TrophyOutlined","FeatureItem","BacktestPage","report_name","base_info","global_info","apr","commission","rate","reBalanceTime","swapFee","market_info","im_list","risk_info","trade_info","ts_list","backtestData","setBacktestData","firstTrade","lastTrade","first","last","ts","overview","risk","market","fmBacktestData","TimeRangeField","start_ts","tiemRange","end_ts","TotalTimeField","totalTime","differenceInDays","RebalanceStrategyField","text","PoolField","tier","PerformanceCard","metas","lower_rate","upper_rate","valueType","reb_rate","tip","isNaN","winRate","maxDrawDown","volatility","sharpe","bodyStyle","meta","MarketCard","open","close","high","low","ActivityCard","toDecimal","str","decimal","PositionCard","positions","MetaItem","PositionItem","Home"],"mappings":"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","file":"static/js/5.ee347b7c.chunk.js","sourcesContent":["import { formatNumber } from './formatBalance'\n\nexport function formatPerc(percent: number,precision=2) {\n  if (Number(percent) > 1000000) {\n    return `${formatNumber(999999)}+%`\n  } else {\n    return `${formatNumber(Number(percent) * 100,precision)}%`\n  }\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\n\nexport function BacktestChart(props) {\n  // Doc: https://recharts.org/en-US/examples\n  const { chartData } = props\n  const data = chartData\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"box-round position-relative-bak box-round\">\n      <div className=\"sv-3 p15\">\n        {/* <ChartHeader /> */}\n        <div style={{ height: '300px' }}>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n              data={data}\n              margin={{\n                top: 0,\n                right: 0,\n                left: 0,\n                bottom: 0,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#ffffff\" strokeOpacity={0.06} />\n              <XAxis dataKey=\"time\" stroke=\"#ffffff\" strokeOpacity={0.15} fill=\"#ffffff\" fillOpacity={0.5} />\n              <YAxis\n                // domain={['dataMin', 'dataMax']}\n                domain={['auto', 'auto']}\n                stroke=\"#ffffff\"\n                strokeOpacity={0.15}\n                fill=\"#ffffff\"\n                fillOpacity={0.5}\n                unit=\"\"\n              />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'rgba(0,0,0,0.65)',\n                  border: 'none',\n                  borderRadius: '6px',\n                  padding: '10px',\n                }}\n                labelStyle={{ color: '#fff', fontSize: '14px' }}\n                formatter={(value) => [`${value}`, t('chart.tooltip.label')]}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"value\"\n                activeDot={{ r: 4 }}\n                stroke=\"#45f5a1\"\n                fill=\"#45f5a1\"\n                fillOpacity={0.08}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// const ChartHeader = () => {\n//   return (\n//     <div className=\"d-flex align-items-right\">\n//       <div className=\"d-flex sh-4\">\n//         <Radio.Group className=\"d-flex\" buttonStyle=\"solid\">\n//           <Radio.Button className=\"h-35 center-vh fs14\" value=\"day\">\n//             Share Price\n//           </Radio.Button>\n//           <Radio.Button className=\"h-35 center-vh fs14\" value=\"week\">\n//             Trading Fees\n//           </Radio.Button>\n//         </Radio.Group>\n//         <Radio.Group className=\"d-flex\" buttonStyle=\"solid\">\n//           <Radio.Button className=\"h-35 center-vh fs14\" value=\"day\">\n//             Day\n//           </Radio.Button>\n//           <Radio.Button className=\"h-35 center-vh fs14\" value=\"week\">\n//             Week\n//           </Radio.Button>\n//           <Radio.Button className=\"h-35 center-vh fs14\" value=\"month\">\n//             Month\n//           </Radio.Button>\n//         </Radio.Group>\n//       </div>\n//     </div>\n//   )\n// }\n","import { Moment } from 'moment'\n\nexport interface OverviewData {\n  circSupply?: string\n  curPrice?: number\n  nextRebase?: number\n  scalingFactor?: number\n  targetPrice?: number\n  totalSupply?: string\n}\n\nexport interface BacktestQueryFormData {\n  pair: string\n  boundaryThreshold: number\n  reBalanceThreshold: number\n  direction: number\n  timeRange: Moment[]\n  days?: number\n  amount0: number\n  amount1?: number\n  period?: number\n  length?: number\n}\n\nexport enum FeeType {\n  Low = '0.0005',\n  Medium = '0.003',\n  High = '0.01',\n}\n\nexport enum FeeTypeTicks {\n  Low = 10,\n  Medium = 60,\n  High = 200,\n}\n","import './Backtest.less'\nimport { Layout, Dropdown } from 'antd'\nimport React from 'react'\nimport { MenuOutlined, HomeOutlined, GoldOutlined, RiseOutlined, RightOutlined } from '@ant-design/icons'\nimport history from 'routerHistory'\nimport { useTranslation } from 'react-i18next'\n\nconst { Sider } = Layout\n\nconst MenuItem = (props) => {\n  const { icon, title, url, showArrow = true, right } = props\n  const goto = () => {\n    history.push(url)\n  }\n  return (\n    <div\n      onClick={url ? goto : null}\n      className={`cols-between h-50 center-v pl10 pr10 ${url ? 'cursor-pointer' : ''}`}\n      style={{ borderBottom: '1px solid rgba(0,0,0,0.15)' }}\n    >\n      <div className=\"d-flex sh-2 fc-black center-v\">\n        {icon}\n        <div className=\"fs18 fw-bold\">{title}</div>\n      </div>\n      <div className=\"fs16 sh-2\">\n        {right}\n        {showArrow && <RightOutlined className=\"fs16 fc-black\" />}\n      </div>\n    </div>\n  )\n}\nconst BackTestMenus = () => (\n  <div className=\"box-round bg-primary\" style={{ width: '360px' }}>\n    <MenuItem icon={<HomeOutlined className=\"fs16\" />} title=\"Home\" url=\"/\" />\n    <MenuItem icon={<GoldOutlined className=\"fs20\" />} title=\"Smart Vault\" url=\"/vaults\" />\n    <MenuItem icon={<RiseOutlined className=\"fs20\" />} title=\"Backtesting\" url=\"/backtest\" />\n  </div>\n)\n\nconst BacktestLayout = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} className=\"vault-detail-page\">\n      <Sider\n        trigger={null}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n          backgroundColor: 'rgba(0,0,0,0.25)',\n          borderRight: '1px solid rgba(255,255,255,0.1)',\n        }}\n        width=\"360px\"\n        collapsible\n        className=\"bg-sider\"\n      >\n        <div className=\"h-60 d-flex center-v text-left sh-2\">\n          <Dropdown overlay={<BackTestMenus />}>\n            <MenuOutlined className=\"fs20 fw-bolder fc-grey h-55 center-vh pl15\" />\n          </Dropdown>\n          <a href=\"/\" className=\"fs20 fw-bolder fc-grey\">\n            Universe Finance\n          </a>\n          <div className=\"bg-primary h-25 center-vh fs12 pl10 pr10 fc-black circle\">{t('backtest.title')}</div>\n        </div>\n        <div className=\"\" style={{ borderBottom: '1px solid rgba(255,255,255,0.1)' }}></div>\n        {props.sider}\n      </Sider>\n      <Layout className=\"\" style={{ marginLeft: 360 }}>\n        <PageHeader />\n        <div className=\"pl20 pr20 pb20\">{props.children}</div>\n      </Layout>\n    </Layout>\n  )\n}\nexport default BacktestLayout\n\nconst PageHeader = () => {\n  const { t } = useTranslation()\n  return (\n    <div className=\"h-60 center-vh cols-type-010 pl20 pr20\">\n      <div className=\"w-80\"></div>\n      <div className=\"fs22 fc-grey text-center\">{t('backtest.slogan')}</div>\n      <div className=\"w-80 text-right\"></div>\n    </div>\n  )\n}\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-prototype-builtins */\nimport { message } from 'antd'\nimport { env } from 'config/env'\n\nexport async function startBacktest(query) {\n  const pathname = '/backtest'\n  const url = `${env.REACT_APP_REST_API_BASE_URL}${pathname}`\n  const body = JSON.stringify(query)\n\n  try {\n    const response = await fetch(`${url}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body,\n    })\n    const res = await response.json()\n    if (res.code === 200) {\n      return res.data\n    } else {\n      message.error(`Server exception (${res.code})`)\n      return {}\n    }\n  } catch (error) {\n    console.log('request error', error)\n    message.error('Network exception')\n    return null\n  }\n}\n","import { format as formatTime } from 'date-fns'\nimport moment from 'moment'\nimport { BacktestParams } from 'service/model'\nimport { formatNumber } from 'utils/formatBalance'\nimport { BacktestQueryFormData, FeeType, FeeTypeTicks } from '../types'\n\nexport function fmBacktestData(data) {\n  /* eslint-disable camelcase */\n  const backtestData = data || {}\n  const {\n    trade_info = [],\n    market_info = {},\n    im_list = [],\n    ts_list = [],\n    global_info = {},\n    risk_info = {},\n    base_info = {},\n  } = backtestData || {}\n\n  // position\n  const firstTrade = trade_info[0] || []\n  const lastTrade = trade_info[trade_info.length - 1] || []\n  const position = {\n    first: {\n      token0: firstTrade[2] ? formatNumber(Math.abs(Number(firstTrade[2])), 4) : '- -',\n      token1: firstTrade[3] ? formatNumber(Math.abs(Number(firstTrade[3])), 4) : '- -',\n    },\n    last: {\n      token0: lastTrade[2] ? formatNumber(Math.abs(Number(lastTrade[2])), 4) : '- -',\n      token1: lastTrade[3] ? formatNumber(Math.abs(Number(lastTrade[3])), 4) : '- -',\n    },\n  }\n  // chart\n  const chartData = ts_list.map((ts, index) => ({\n    time: formatTime(new Date(ts * 1000), 'MM/dd HH:mm'),\n    value: formatNumber(Number(im_list[index]), 4),\n  }))\n\n  // overview\n  const overview = {\n    ...global_info,\n    risk: risk_info,\n    base: base_info,\n    market: market_info,\n    position,\n  }\n  return {\n    overview,\n    chartData,\n    logs: trade_info,\n  }\n}\n\n// [pair, boundaryThreshold, reBalanceThreshold, direction, startTs, endTs, days, amount0, amount1, period, length]\nexport function stringifyBacktestQuery(formData: BacktestQueryFormData) {\n  const {\n    pair,\n    boundaryThreshold,\n    reBalanceThreshold,\n    direction,\n    timeRange: [start, end],\n    days = 0,\n    amount0,\n    amount1 = 0,\n    period = 0,\n    length = 0,\n  } = formData\n\n  return [\n    pair,\n    boundaryThreshold,\n    reBalanceThreshold,\n    direction,\n    start.format('YYYY/MM/DD'),\n    end.format('YYYY/MM/DD'),\n    days,\n    amount0,\n    amount1,\n    period,\n    length,\n  ].join(',')\n}\n\nexport function formatSearchParams(search: string): Partial<BacktestQueryFormData> {\n  const params = new URLSearchParams(search)\n  const arr = params.get('q')?.split(',') ?? []\n\n  if (arr.length) {\n    return {\n      pair: arr[0],\n      boundaryThreshold: Number(arr[1]),\n      reBalanceThreshold: Number(arr[2]),\n      direction: Number(arr[3]),\n      timeRange: [moment(arr[4]), moment(arr[5])],\n      days: Number(arr[6]),\n      amount0: Number(arr[7]),\n      amount1: Number(arr[8]),\n      period: Number(arr[9]),\n      length: Number(arr[10]),\n    }\n  } else {\n    return {}\n  }\n}\n\nexport function formatFormData2Params(formData: BacktestQueryFormData) {\n  const { timeRange, ...rest } = formData\n  const queryData: BacktestParams = {\n    ...rest,\n    startTs: timeRange[0].unix(),\n    endTs: timeRange[1].unix(),\n  }\n\n  return queryData\n}\n\n// Math.pow(1.0001, 960) = 1.1\n// a = Math.pow(b, c);\n// c = Math.log(a) / Math.log(b)\nfunction getPriceRangeConfig(gridTicks: number) {\n  const ranges = [1.05, 1.1, 1.2, 1.3, 1.4, 1.5]\n  // const rangeType = ['Aggressive range', 'Robust range', 'Conservative range']\n  const factor = 1.0001\n\n  const arr = ranges.map((range) => {\n    const rawTicks = Math.log(range) / Math.log(factor)\n    const realTicks = Math.round(rawTicks / gridTicks) * gridTicks\n    const percent = ((range - 1) * 100).toFixed(1)\n\n    return {\n      tick: realTicks,\n      range: `-${percent}% ~ +${percent}% ( ${realTicks * 2} ticks )`,\n      desc: '',\n    }\n  })\n\n  return arr\n}\n\nexport const priceRangeConfig = {\n  [FeeType.Low]: getPriceRangeConfig(FeeTypeTicks.Low),\n  [FeeType.Medium]: getPriceRangeConfig(FeeTypeTicks.Medium),\n  [FeeType.High]: getPriceRangeConfig(FeeTypeTicks.High),\n}\n\nfunction getThresholdConfig(gridTicks: number) {\n  const ranges = [1.02, 1.03, 1.04, 1.05, 1.06, 1.08, 1.1, 1.15]\n  // const rangeType = ['High frequency rebalance', 'Medium frequency rebalance', 'Low frequency rebalance']\n  const factor = 1.0001\n\n  const arr = ranges.map((range) => {\n    const rawTicks = Math.log(range) / Math.log(factor)\n    const realTicks = Math.round(rawTicks / gridTicks) * gridTicks\n    const percent = ((Math.pow(factor, realTicks) - 1) * 100).toFixed(1)\n\n    return {\n      tick: realTicks,\n      range: `${percent}% ( ${realTicks} ticks )`,\n      desc: '',\n      // desc: `( ${realTicks} ticks )`,\n      // desc: rangeType[Math.floor(index / 3)],\n    }\n  })\n\n  return arr\n}\n\nexport function ticks2Price(ticks: number) {\n  const factor = 1.0001\n\n  return Math.pow(factor, ticks) - 1\n}\n\nexport const thresholdConfig = {\n  [FeeType.Low]: getThresholdConfig(FeeTypeTicks.Low),\n  [FeeType.Medium]: getThresholdConfig(FeeTypeTicks.Medium),\n  [FeeType.High]: getThresholdConfig(FeeTypeTicks.High),\n}\n","import { Button, DatePicker, Form, Select } from 'antd'\nimport { TFunction } from 'i18next'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useHistory, useLocation } from 'react-router'\nimport { useMount } from 'react-use'\nimport { startBacktest } from 'service/backtest'\nimport { BacktestQueryFormData, FeeType } from '../types'\nimport './BacktestQueryCard.less'\nimport {\n  formatFormData2Params,\n  formatSearchParams,\n  priceRangeConfig,\n  stringifyBacktestQuery,\n  thresholdConfig\n} from './utils'\n\n\n\n\nconst { RangePicker } = DatePicker\n\nconst CustomOption = (props) => {\n  return (\n    <div className=\"d-flex sh-2 pl5 custom-option\">\n      <div style={{ width: '150px' }} className=\"fw-bolder\">\n        {props.title}\n      </div>\n      <div className=\"custom-option-des\" style={{ color: 'rgba(255,255,255,0.35)' }}>\n        {props.des}\n      </div>\n    </div>\n  )\n}\nexport const getPoolsOptions = (t: TFunction) => [\n  {\n    id: 1,\n    label: 'Uniswap V3 USDC-WETH 0.3%',\n    value: '0x8ad599c3A0ff1De082011EFDDc58f1908eb6e6D8',\n    feeType: FeeType.Medium,\n    disabled: false,\n  },\n]\n\nconst getPriceRangeOptions = (t: TFunction, type = FeeType.Medium) => {\n  const config = priceRangeConfig[type]\n\n  return config.map((item, index) => {\n    return {\n      id: index,\n      label: <CustomOption des={item.desc} title={item.range} />,\n      value: item.tick,\n      disabled: false,\n    }\n  })\n}\n\nconst getLiquidityOptions = (t: TFunction) => [\n  { id: 1, label: <CustomOption des=\"\" title=\"$ 10,000\" />, value: 10000, disabled: false },\n  { id: 2, label: <CustomOption des=\"\" title=\"$ 100,000\" />, value: 100000, disabled: false },\n  { id: 3, label: <CustomOption des=\"\" title=\"$ 1,000,000\" />, value: 1000000, disabled: false },\n  { id: 4, label: <CustomOption des=\"\" title=\"$ 5,000,000\" />, value: 5000000, disabled: false },\n  { id: 5, label: <CustomOption title={t('backtest.form.field.lqt_more')} des=\"\" />, value: -1, disabled: true },\n]\nconst getThresholdOptions = (t: TFunction, type = FeeType.Medium) => {\n  const config = thresholdConfig[type]\n\n  return config.map((item, index) => {\n    return { id: index, label: <CustomOption des={item.desc} title={item.range} />, value: item.tick, disabled: false }\n  })\n}\n\nconst getStrateyOptions = (t: TFunction) => [\n  { id: 1, label: <CustomOption title={t('backtest.form.field.rs_null')} des=\"\" />, value: 3, disabled: false },\n  {\n    id: 2,\n    label: <CustomOption title={t('backtest.form.field.rs_mf')} des=\"\" />,\n    value: 4,\n    disabled: false,\n  },\n  { id: 3, label: <CustomOption title={t('backtest.form.field.rs_bull')} des=\"\" />, value: 0, disabled: false },\n  { id: 4, label: <CustomOption title={t('backtest.form.field.rs_bear')} des=\"\" />, value: 1, disabled: false },\n  { id: 5, label: <CustomOption title={t('backtest.form.field.rs_more')} des=\"\" />, value: 100, disabled: true },\n]\n\nfunction getRangeOptions(pair: string, poolsOptions: any, t: TFunction) {\n  const feeType = poolsOptions.find((pool) => pool.value === pair).feeType\n  const priceOptions = getPriceRangeOptions(t, feeType)\n  const thresholdOptions = getThresholdOptions(t, feeType)\n\n  return {\n    priceOptions,\n    thresholdOptions,\n  }\n}\n\nexport default function BacktestQueryCard(props) {\n  const { onBacktestDataFetched, onLoading } = props\n  const { search } = useLocation()\n  const urlParams = formatSearchParams(search)\n  const { t } = useTranslation()\n  const defaultPriceRangeOpts = getPriceRangeOptions(t)\n  const defaultThresholdOpts = getThresholdOptions(t)\n  const liquidityOptions = getLiquidityOptions(t)\n  const strateyOptions = getStrateyOptions(t)\n  const poolsOptions = getPoolsOptions(t)\n  const defaultFormData: BacktestQueryFormData = {\n    pair: poolsOptions[0].value,\n    boundaryThreshold: defaultPriceRangeOpts[0].value,\n    reBalanceThreshold: defaultThresholdOpts[0].value,\n    amount0: liquidityOptions[0].value,\n    amount1: 0,\n    days: 0,\n    period: 270,\n    length: 1,\n    direction: 3,\n    timeRange: [moment('2021/09/01', 'YYYY-MM-DD'), moment()],\n    ...urlParams,\n  }\n  const opts = getRangeOptions(defaultFormData.pair, poolsOptions, t)\n  const [priceRangeOptions, setPriceRangeOptions] = useState(opts.priceOptions)\n  const [thresholdOptions, setThresholdOptions] = useState(opts.thresholdOptions)\n  const history = useHistory()\n  const [formData, setFormData] = useState<BacktestQueryFormData>(defaultFormData)\n  const onValuesChange = (changedValues: Partial<BacktestQueryFormData>) => {\n    const changedAttrs: Partial<BacktestQueryFormData> = {}\n\n    if (changedValues.pair) {\n      const opts = getRangeOptions(changedValues.pair, poolsOptions, t)\n\n      setPriceRangeOptions(opts.priceOptions)\n      setThresholdOptions(opts.thresholdOptions)\n\n      changedAttrs.boundaryThreshold = opts.priceOptions[0].value\n      changedAttrs.reBalanceThreshold = opts.thresholdOptions[0].value\n    }\n\n    setFormData({\n      ...formData,\n      ...changedValues,\n      ...changedAttrs,\n    })\n  }\n\n  const [loading, setLoading] = useState(false)\n  const onSubmit = () => {\n    const queryData = formatFormData2Params(formData)\n\n    setLoading(true)\n    onLoading(true)\n    startBacktest(queryData).then((res) => {\n      setLoading(false)\n      onBacktestDataFetched(res)\n      onLoading(false)\n    })\n  }\n\n  useMount(() => {\n    if (Object.keys(urlParams).length) {\n      onSubmit()\n    }\n  })\n\n  useEffect(() => {\n    const query = stringifyBacktestQuery(formData)\n    if (query) {\n      history.replace(`/backtest?q=${query}`)\n    }\n  }, [formData, history])\n\n  return (\n    <div className=\"\">\n      <Form initialValues={defaultFormData} colon={false} layout=\"vertical\" onValuesChange={onValuesChange}>\n        <Form.Item className=\"mb15\" label={t('backtest.form.field.pool')} name=\"pair\">\n          <Select placeholder={poolsOptions[0].label}>\n            {poolsOptions.map((option) => (\n              <Select.Option key={option.id} value={option.value} disabled={option.disabled}>\n                {option.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item className=\"mb15\" label={t('backtest.form.field.time_range')} name=\"timeRange\">\n          <RangePicker className=\"w-p100\" format=\"YYYY/MM/DD\" />\n        </Form.Item>\n        <Form.Item className=\"mb15\" label={t('backtest.form.field.price_range_size')} name=\"boundaryThreshold\">\n          <Select placeholder={priceRangeOptions[0].label}>\n            {priceRangeOptions.map((option) => (\n              <Select.Option key={option.id} value={option.value} disabled={option.disabled}>\n                {option.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item className=\"mb15\" label={t('backtest.form.field.position_value')} name=\"amount0\">\n          <Select placeholder={liquidityOptions[0].label}>\n            {liquidityOptions.map((option) => (\n              <Select.Option key={option.id} value={option.value} disabled={option.disabled}>\n                {option.label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <div className=\"pt10\"></div>\n        <Button\n          loading={loading}\n          disabled={loading}\n          onClick={onSubmit}\n          className=\"d-block w-p100 h-45 center-vh\"\n          type=\"primary\"\n        >\n          {t('backtest.form.submit')}\n        </Button>\n        <div className=\"pt10\"></div>\n      </Form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip } from 'antd'\nimport { LinkOutlined, InfoCircleOutlined } from '@ant-design/icons'\nimport { addressEllipsis } from 'utils/address'\n\nexport const ColumnItem = (props) => {\n  const { label, value } = props\n  return (\n    <div className=\"pt15 pb15 ml20 mr20 center-v\" style={{ borderBottom: '1px solid rgba(255,255,255,0.04)' }}>\n      <div className=\"d-inline-block text-left pl0\" style={{ minWidth: '180px' }}>\n        <div className=\"fs16 fc-grey-lighter\">{label}</div>\n      </div>\n      <div className=\"d-inline-block\">\n        <div className=\"fs16 fw-bolder fc-grey\">{value}</div>\n      </div>\n    </div>\n  )\n}\n\nexport const AddressLink = (props) => {\n  const { address } = props\n  return (\n    <div>\n      {addressEllipsis(address)}\n      <a className=\"ml5\" target=\"_blank\" rel=\"noreferrer\" href={`https://etherscan.io/address/${address}`}>\n        <LinkOutlined />\n      </a>\n    </div>\n  )\n}\n\nexport const CustomTooltip = (props) => {\n  const { title, className = 'center-v' } = props\n  const newTitle = <div className=\"p5 fc-white\">{title}</div>\n  return (\n    <Tooltip title={newTitle} overlayInnerStyle={{}}>\n      <div className={`d-flex sh-1 ${className}`}>\n        <div>{props.children}</div>\n        <InfoCircleOutlined className=\"fc-grey-lighter\" />\n      </div>\n    </Tooltip>\n  )\n}\n","import { Table } from 'antd'\nimport { format as formatTime } from 'date-fns'\nimport { TFunction } from 'i18next'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport TabsWrapper from 'components/TabsWrapper'\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance'\nimport { formatPerc } from 'utils/percent'\n\nimport { CustomTooltip } from './Common'\nimport BigNumber from 'bignumber.js'\n\nexport default (props) => {\n  const { logs = [] } = props\n  const { t } = useTranslation()\n  const tabs = [\n    {\n      key: 'rebalances',\n      title: t('backtest.activity.title'),\n      content: <ActivityTab logs={logs} />,\n    },\n  ]\n  return (\n    <div className=\"box-round bg-card\">\n      <TabsWrapper tabs={tabs} />\n    </div>\n  )\n}\n\nexport const ActivityTab = (props) => {\n  const { logs = [], base = {} } = props\n  const dataSource = logs.map((log) => ({\n    type: log[11],\n    time: log[0],\n    price: formatNumber(Number(log[1]), 4),\n    liquidity: `${formatNumber(Math.abs(Number(log[2])), 4)} ${base.token0} + ${formatNumber(\n      Math.abs(Number(log[3])),\n      4,\n    )} ${base.token1}`,\n    im: log[7],\n    gasFee: formatNumber(getBalanceNumber(new BigNumber(log[9]).times(log[10])), 4, 4),\n    gasPrice: formatNumber(log[9] / 1e9, 2, 2),\n    fees: log[8],\n  }))\n\n  const pagination = {\n    defaultPageSize: 10,\n    className: 'm15',\n  }\n  const { t } = useTranslation()\n  return <Table size=\"small\" pagination={pagination} dataSource={dataSource} columns={getActivityColumns(t)} />\n}\n\nconst profitRender = (value, record) => {\n  const number = Number(record.im) + Number(record.fees)\n  return percentRender(number)\n}\n\nconst percentRender = (value) => {\n  switch (true) {\n    case Number(value) > 0:\n      return <div className=\"fc-up fw-bolder\">{formatPerc(value, 4)}</div>\n    case Number(value) === 0:\n      return <div className=\"fc-grey-lighter\">0%</div>\n    case Number(value) < 0:\n      return <div className=\"fc-down fw-bolder\">{formatPerc(value, 4)}</div>\n    default:\n      return null\n  }\n}\n\nconst tsRender = (value) => {\n  return <div className=\"fc-grey\">{formatTime(new Date(value * 1000), 'yyyy-MM-dd HH:mm')}</div>\n}\n\nconst TypeRender = ({ value }) => {\n  const { t } = useTranslation()\n\n  if (value === 'add') {\n    return (\n      <div\n        className=\"bg-primary fc-black box-round text-center pl10 pr10 h-30 center-v\"\n        style={{ textTransform: 'capitalize', width: '135px' }}\n      >\n        {t('backtest.tab.type_add')}\n      </div>\n    )\n  } else {\n    return (\n      <div\n        className=\"bg-warn fc-black box-round text-center pl10 pr10 h-30 center-v\"\n        style={{ textTransform: 'capitalize', width: '135px' }}\n      >\n        {t('backtest.tab.type_remove')}\n      </div>\n    )\n  }\n}\n\nconst getActivityColumns = (t: TFunction) => [\n  {\n    title: t('backtest.tab.time'),\n    dataIndex: 'time',\n    key: 'time',\n    render: tsRender,\n  },\n  {\n    title: t('backtest.tab.type'),\n    dataIndex: 'type',\n    key: 'type',\n    render: (value) => <TypeRender value={value} />,\n  },\n  {\n    title: t('backtest.tab.liquidity'),\n    dataIndex: 'liquidity',\n    key: 'liquidity',\n  },\n  {\n    title: t('backtest.tab.price'),\n    dataIndex: 'price',\n    key: 'price',\n    // render: strategyRender,\n  },\n  {\n    title: t('backtest.tab.gasfee'),\n    dataIndex: 'gasFee',\n    key: 'gasFee',\n    render: (value, record, index) => (\n      <div>\n        {(index === 0 || Number(value) === 0) && '--'}\n        {index !== 0 && Number(value) !== 0 && (\n          <CustomTooltip title={`Gas Price: ${record.gasPrice} Gwei`}>{value}</CustomTooltip>\n        )}\n      </div>\n    ),\n  },\n  {\n    title: t('backtest.tab.fc'),\n    dataIndex: 'fees',\n    key: 'fees',\n    render: percentRender,\n  },\n  {\n    title: (\n      <CustomTooltip title={t('backtest.tab.rebalance_loss_tips')}>{t('backtest.tab.rebalance_loss')}</CustomTooltip>\n    ),\n    dataIndex: 'im',\n    key: 'im',\n    render: percentRender,\n  },\n  {\n    title: t('backtest.tab.net_profit'),\n    dataIndex: 'profit',\n    key: 'profit',\n    render: profitRender,\n  },\n]\n","import React from 'react'\nimport { ClockCircleOutlined, DatabaseOutlined, TrophyOutlined, RiseOutlined } from '@ant-design/icons'\nimport { useTranslation } from 'react-i18next'\n\nconst PresetedStrategies = () => {\n  return null\n  return (\n    <div className=\"sv-3\">\n      <div className=\"fs18 fw-bolder fc-grey\">Preseted Strategies</div>\n      <div className=\"bg-primary box-round p10\">\n        <div className=\"fc-black fs16 fw-bold\">Bullish Strategy</div>\n        <div className=\"fs14 fc-black\">2021/06/15 ~ 2021/06/30</div>\n      </div>\n      <div className=\"bg-down box-round p10\">\n        <div className=\"fc-black fs16 fw-bold\">Bearish Strategy</div>\n        <div className=\"fs14 fc-black\">2021/06/15 ~ 2021/06/30</div>\n      </div>\n      <div className=\"bg-warn box-round p10\">\n        <div className=\"fc-black fs16 fw-bold\">Trend Strategy</div>\n        <div className=\"fs14 fc-black\">2021/06/15 ~ 2021/06/30</div>\n      </div>\n      <div className=\"bg-blue-light box-round p10\">\n        <div className=\"fc-black fs16 fw-bold\">Market Neutral Strategy</div>\n        <div className=\"fs14 fc-black\">2021/06/15 ~ 2021/06/30</div>\n      </div>\n      <div className=\"pt50\"></div>\n    </div>\n  )\n}\nexport const StrategyFeatures = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"sv-3\">\n      <div className=\"fs18 fw-bolder fc-grey\">{t('backtest.feature.title')}</div>\n      <FeatureItem className=\"bg-primary\" icon={<DatabaseOutlined />} title={t('backtest.feature.onchain')} des=\"\" />\n      <FeatureItem className=\"bg-warn\" icon={<ClockCircleOutlined />} title={t('backtest.feature.block_level')} />\n      <FeatureItem className=\"bg-red\" icon={<TrophyOutlined />} title={t('backtest.feature.strategy')} />\n      <FeatureItem className=\"bg-blue-light\" icon={<RiseOutlined />} title={t('backtest.feature.indicator')} />\n      <div className=\"pt50\"></div>\n    </div>\n  )\n}\n\nconst FeatureItem = (props) => {\n  const { icon, title, des, className = '' } = props\n  return (\n    <div className={`center-v d-flex box-round sh-2 pl15 pr10 pt10 pb10 ${className}`}>\n      <div className=\"fc-black fs20\">{icon}</div>\n      <div className=\"\">\n        <div className=\"fc-black fs16 fw-bold\">{title}</div>\n        {des && <div className=\"fs14 fc-black\">{des}</div>}\n      </div>\n    </div>\n  )\n}\n\nexport default PresetedStrategies\n","import './Backtest.less'\n\nimport { Card } from 'antd'\nimport { differenceInDays, format as formatTime } from 'date-fns'\nimport React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { formatNumber } from 'utils/formatBalance'\nimport { formatPerc } from 'utils/percent'\n\nimport { BacktestChart } from './BacktestChart'\nimport BacktestLayout from './BacktestLayout'\nimport BacktestQueryCard from './BacktestQueryCard'\nimport { ActivityTab } from './BacktestTabs'\nimport { CustomTooltip } from './Common'\nimport { StrategyFeatures } from './StrategyList'\nimport { fmBacktestData, ticks2Price } from './utils'\n\nconst BacktestPage = () => {\n  const defaultBacktestData = {\n    report_name: '',\n    base_info: {},\n    global_info: {\n      apr: [],\n      commission: [],\n      rate: [],\n      reBalanceTime: [],\n      swapFee: [],\n    },\n    market_info: {},\n    im_list: [],\n    risk_info: [],\n    trade_info: [],\n    ts_list: [],\n  }\n  const [backtestData, setBacktestData] = useState(defaultBacktestData)\n  const [loading, setLoading] = useState(false)\n  const onBacktestDataFetched = (res) => {\n    setBacktestData(res)\n  }\n  const onLoading = (loading) => {\n    setLoading(loading)\n  }\n  const { overview, chartData, logs } = fmBacktestData(backtestData)\n  return (\n    <BacktestLayout\n      sider={\n        <div>\n          <div className=\"p15\">\n            <BacktestQueryCard onBacktestDataFetched={onBacktestDataFetched} onLoading={onLoading} />\n          </div>\n          <div className=\"\" style={{ borderBottom: '1px solid rgba(255,255,255,0.1)' }}></div>\n          <div className=\"p15\">\n            {/* <StrategyList  /> */}\n            <StrategyFeatures />\n          </div>\n        </div>\n      }\n    >\n      <div className=\"sv-4\">\n        <PerformanceCard loading={loading} overview={overview} chartData={chartData} />\n        <MarketCard loading={loading} overview={overview} />\n        <ActivityCard loading={loading} overview={overview} logs={logs} />\n      </div>\n    </BacktestLayout>\n  )\n}\nexport default BacktestPage\n\nconst TimeRangeField = (props) => {\n  const { base } = props\n  if (!base.start_ts) return <div>- -</div>\n  const tiemRange = `${formatTime(new Date(Number(base.start_ts) * 1000), 'yyyy/MM/dd')} ~ ${formatTime(\n    new Date(Number(base.end_ts) * 1000),\n    'yyyy/MM/dd',\n  )}`\n  return <div className=\"\">{tiemRange}</div>\n}\nconst TotalTimeField = (props) => {\n  const { base } = props\n  if (!base.start_ts) return <div>- -</div>\n  const totalTime = differenceInDays(new Date(Number(base.end_ts) * 1000), new Date(Number(base.start_ts) * 1000))\n  return <div>{totalTime}</div>\n}\nconst RebalanceStrategyField = (props) => {\n  const { t } = useTranslation()\n  const { base } = props\n  let text = '- -'\n  switch (Number(base.direction)) {\n    case 0:\n      text = t('backtest.form.field.rs_bull')\n      break\n    case 1:\n      text = t('backtest.form.field.rs_bear')\n      break\n    case 3:\n      text = t('backtest.form.field.rs_null')\n      break\n    case 4:\n      text = t('backtest.form.field.rs_trade')\n      break\n    default:\n      break\n  }\n  return <div>{text}</div>\n}\n\nconst PoolField = (props) => {\n  const { base } = props\n  if (!base.token0) return <div>- -</div>\n  return (\n    <div>\n      {base.token0}-{base.token1} {formatPerc(base.tier)}\n    </div>\n  )\n}\n\nconst PerformanceCard = (props) => {\n  const { t } = useTranslation()\n  const { overview, chartData, loading } = props\n  const { rate = [], apr = [], risk = {}, reBalanceTime = [], base = {} } = overview\n  const metas = [\n    {\n      label: t('backtest.form.field.pool'),\n      value: <PoolField base={base} />,\n    },\n    {\n      label: t('backtest.form.field.time_range'),\n      value: <TimeRangeField base={base} />,\n    },\n    {\n      label: t('backtest.field.total_days'),\n      value: <TotalTimeField base={base} />,\n    },\n    {\n      label: t('backtest.form.field.price_range_size'),\n      value: ticks2Price(base.lower_rate) + ticks2Price(base.upper_rate),\n      valueType: 'nocolorPercent',\n    },\n    {\n      label: t('backtest.form.field.rebalance_strategy'),\n      value: <RebalanceStrategyField base={base} />,\n    },\n    {\n      label: t('backtest.form.field.rebalance_threshold'),\n      value: Number(base.direction) !== 3 ? ticks2Price(base.reb_rate) : null,\n      valueType: 'nocolorPercent',\n    },\n    { label: t('backtest.field.gross_fee_apr'), value: apr[1], valueType: 'percent' },\n    { label: t('backtest.field.gross_fee_return'), value: rate[1], valueType: 'percent' },\n    {\n      label: t('backtest.field.net_apr'),\n      value: apr[0],\n      valueType: 'percent',\n      tip: t('backtest.field.net_apr_tips'),\n    },\n    {\n      label: t('backtest.field.net_return'),\n      value: rate[0],\n      valueType: 'percent',\n      tip: t('backtest.field.net_return_tips'),\n    },\n    {\n      label: t('backtest.field.rebalance_times'),\n      value: !Number.isNaN(reBalanceTime[0] + reBalanceTime[1]) ? (\n        <div className=\"fs16 fw-bolder fc-primary\">{reBalanceTime[0] + reBalanceTime[1]}</div>\n      ) : (\n        '- -'\n      ),\n    },\n    {\n      label: t('backtest.field.rwr'),\n      value: risk.winRate,\n      valueType: 'percent',\n    },\n    { label: t('backtest.field.max_drawdown'), value: risk.maxDrawDown, valueType: 'nocolorPercent' },\n    { label: t('backtest.field.volatility'), value: risk.volatility, valueType: 'nocolorPercent' },\n    { label: t('backtest.field.sharpe_ratio'), value: risk.sharpe ? Number(risk.sharpe).toFixed(4) : '--' },\n  ]\n\n  return (\n    <Card\n      loading={loading}\n      className=\"transparent-card\"\n      title={t('backtest.performance.title')}\n      bodyStyle={{ padding: 0 }}\n    >\n      <div className=\"row ml0 mr0\">\n        {metas.map((meta) => (\n          <div\n            key={meta.label}\n            className=\"col-md-2 p5\"\n            style={{\n              borderBottom: '1px solid rgba(255,255,255,0.05)',\n              borderRight: '1px solid rgba(255,255,255,0.05)',\n            }}\n          >\n            <MetaItem meta={meta} />\n          </div>\n        ))}\n      </div>\n      <BacktestChart chartData={chartData} />\n    </Card>\n  )\n}\n\nconst MarketCard = (props) => {\n  const { overview = {}, loading } = props\n  const { market = {} } = overview\n  const { t } = useTranslation()\n  const metas = [\n    { label: t('backtest.market.open_price'), value: market.open ? formatNumber(Number(market.open), 4) : '- -' },\n    { label: t('backtest.market.close_price'), value: market.close ? formatNumber(Number(market.close), 4) : '- -' },\n    { label: t('backtest.market.high_price'), value: market.high ? formatNumber(Number(market.high), 4) : '- -' },\n    { label: t('backtest.market.low_price'), value: market.low ? formatNumber(Number(market.low), 4) : '- -' },\n    { label: t('backtest.market.change'), value: Number(market.close) / Number(market.open) - 1, valueType: 'percent' },\n    {\n      label: t('backtest.market.amplitude'),\n      value: (Number(market.high) - Number(market.low)) / Number(market.open),\n      valueType: 'nocolorPercent',\n    },\n  ]\n  return (\n    <Card\n      loading={loading}\n      className=\"transparent-card-bak\"\n      title={t('backtest.market.title')}\n      bodyStyle={{ padding: 0 }}\n    >\n      <div className=\"row ml0 mr0\">\n        {metas.map((meta) => (\n          <div\n            key={meta.label}\n            className=\"col-md-2 p5\"\n            style={{\n              borderBottom: '1px solid rgba(255,255,255,0.05)',\n              borderRight: '1px solid rgba(255,255,255,0.05)',\n            }}\n          >\n            <MetaItem meta={meta} />\n          </div>\n        ))}\n      </div>\n    </Card>\n  )\n}\n\nconst ActivityCard = (props) => {\n  const { overview = {}, logs = [], loading } = props\n  const { base = {} } = overview\n  const { t } = useTranslation()\n  return (\n    <Card\n      loading={loading}\n      className=\"transparent-card-bak\"\n      title={t('backtest.activity.title')}\n      bodyStyle={{ padding: 0 }}\n    >\n      <PositionCard overview={overview} />\n      <div className=\"bb-grey-light \"></div>\n      <ActivityTab logs={logs} base={base} />\n    </Card>\n  )\n}\nconst toDecimal = (str, decimal = 4) => Number(str).toFixed(decimal)\n\nconst PositionCard = (props) => {\n  const { overview } = props\n  const { position, commission = [], base = {} } = overview\n  const { t } = useTranslation()\n  const positions = [\n    {\n      label: t('backtest.pcard.initial_pos'),\n      token0: position.first.token0,\n      token1: position.first.token1,\n    },\n    {\n      label: t('backtest.pcard.final_pos'),\n      token0: position.last.token0,\n      token1: position.last.token1,\n    },\n    {\n      label: t('backtest.pcard.fee_collected'),\n      token0: commission[0] ? toDecimal(commission[0]) : '- -',\n      token1: commission[1] ? toDecimal(commission[1]) : '- -',\n    },\n  ]\n  return (\n    <div className=\"p15\">\n      <div className=\"row\">\n        {positions.map((position) => (\n          <div key={position.label} className=\"col-md-4\">\n            <PositionItem position={position} base={base} />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst MetaItem = (props) => {\n  const { meta = {} } = props\n  const { label, value, valueType, tip } = meta\n\n  return (\n    <div className=\"pl5 pr5 pt15 pb15 text-center\">\n      {valueType === 'percent' && (Number.isNaN(value) || !value) && <div className=\"fs18\">- -</div>}\n      {valueType === 'percent' && Number(value) >= 0 && (\n        <div className=\"fs16 fc-up fw-bolder h-25\">{value ? formatPerc(value) : '- -'}</div>\n      )}\n      {valueType === 'percent' && Number(value) < 0 && (\n        <div className=\"fs16 fc-down fw-bolder h-25\">{value ? formatPerc(value) : '- -'}</div>\n      )}\n      {valueType === 'nocolorPercent' && <div className=\"fs14 fc-grey\">{value ? formatPerc(value) : '- -'}</div>}\n      {!valueType && <div className=\"fs14 fc-grey h-25\">{Number.isNaN(value) ? '- -' : value}</div>}\n      {tip && (\n        <CustomTooltip title={tip} className=\"center-vh\">\n          <div className=\"fs13 fc-grey-lighter\">{label}</div>\n        </CustomTooltip>\n      )}\n      {!tip && <div className=\"fs13 fc-grey-lighter\">{label}</div>}\n    </div>\n  )\n}\nconst PositionItem = (props) => {\n  const { position = {}, base = {} } = props\n  return (\n    <div className=\"text-left sv-1 p15 box-round bg-primary\">\n      <div className=\"fs14 fc-black\">{position.label}</div>\n      {!props.children && (\n        <div className=\"h-45\">\n          <div className=\"fs14 fc-black\">\n            {position.token0} {base.token0}\n          </div>\n          <div className=\"fs14 fc-black\">\n            {position.token1} {base.token1}\n          </div>\n        </div>\n      )}\n      {props.children && <div className=\"h-45 fc-black\">{props.children}</div>}\n    </div>\n  )\n}\n// const PercentItem = (props) => {\n//   const { label, value, noColor } = props\n//   return (\n//     <div className=\"pl10 pr10 pt15 pb15 text-center\">\n//       {Number.isNaN(value) && <div className=\"fs18\">--</div>}\n//       {!Number.isNaN(value) && Number(value) >= 0 && (\n//         <div className=\"fs18 fc-up fw-bolder\">{value ? formatPerc(value) : '--'}</div>\n//       )}\n//       {Number(value) < 0 && <div className=\"fs18 fc-down fw-bolder\">-{value ? formatPerc(value) : '--'}</div>}\n//       <div className=\"fs16 fc-grey\">{Number.isNaN(value) ? '--' : value}</div>\n//     </div>\n//   )\n// }\n","import React from 'react'\nimport Backtest from './components/Backtest'\n\nconst Home: React.FC = () => {\n  return <Backtest />\n}\nexport default Home\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/web3/useEagerConnect.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","contexts/ThemeContext.tsx","hooks/ui/useTheme.ts","components/PageLoader/PageLoader.tsx","components/ScrollToTop/index.tsx","App.tsx","contexts/Localisation/translationsContext.ts","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","Providers.tsx","index.tsx","hooks/web3/useWeb3.ts","contexts/ChainContext.tsx","config/abi/bsc.ts","config/abi/eth.ts","config/abi/index.ts","utils/web3.ts","state/utils.ts","components/types.ts","hooks/context/useRefresh.ts","state/hooks.ts","utils/getRpcUrl.ts","state/toasts/index.ts","state/config/index.ts","service/base.ts","service/vault.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/block/index.ts","routerHistory.ts","utils/web3React.ts","contexts/RefreshContext.tsx","config/constants/pools.ts","state/prices/index.ts","config/constants/bsc/tokens.ts","config/constants/eth/tokens.ts","config/constants/tokens.ts","utils/wallet.ts","hooks/web3/useAuth.ts","state/tokens/fetchTokensUser.ts","state/tokens/index.ts","utils/formatBalance.ts","i18n/index.ts","config/constants/chain.ts","config/env/index.ts","components/WalletModal/AccountModal.tsx","components/WalletModal/config.tsx","components/Responsive/index.tsx","components/WalletModal/ConnectModal.tsx","components/WalletModal/WatchWalletModal.tsx","utils/form.ts","components/header/UserBlock.tsx","config/constants/meta.ts","components/layout/Announcemtents.tsx","components/layout/Page.tsx","common/types.ts","utils/multicall.ts","utils/chain.ts","config/constants/bsc/contracts.ts","config/constants/eth/contracts.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/layers/index.ts","state/index.ts","config/constants/types.ts","utils/pool.ts","utils/global.ts"],"names":["useEagerConnect","login","useAuth","useEffect","connectorId","window","localStorage","getItem","connectorLocalStorageKey","Menu","props","className","SuspenseWithChunkError","state","hasError","error","isJsChunkLoadError","name","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","fallback","React","Component","ThemeContext","createContext","isDark","toggleTheme","ThemeContextProvider","children","useState","setIsDark","Provider","value","prevState","sessionStorage","setItem","useTheme","useContext","theme","PageLoader","Page","ScrollToTop","pathname","useLocation","scrollTo","Backtest","lazy","BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","App","chainId","useChainContext","dispatch","useAppDispatch","useConfig","console","warn","useFetchPublicData","useFetchPriceList","path","exact","component","memo","defaultTranslationState","translations","setTranslations","TranslationsContext","EN","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","storedLangCode","storedLang","filter","getStoredLang","langObject","Providers","ChainContext","getLibrary","store","RefreshContext","render","ReactDOM","StrictMode","document","getElementById","a","detectEthereumProvider","provider","initGlobal","Number","addEventListener","init","useWeb3","library","useWeb3React","refEth","useRef","Web3","getWeb3NoAccount","web3","setweb3","current","getDefaultChaindId","chainName","setChainId","id","log","ChainContextProvider","global","getGlobal","getChainById","useLayoutEffect","eth","getChainId","then","ethereum","on","t","storeInjectedChainId","setTimeout","erc20","Multicall","onegateVault","WETH","ABI","Proxy","get","obj","prop","isGlobalReady","getChain","CHAIN","BSC","bscABIs","ETH","ethABIs","getABI","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","setStore","getStore","getState","getDispatch","ToastTypes","useRefresh","fastRefresh","fast","slowRefresh","slow","fetchPoolsPublicDataAsync","interval","setInterval","getBlockNumber","blockNumber","setBlock","clearInterval","useSelector","useWalletWatched","walletWatched","isWatching","Boolean","useAccount","account","fetchPrices","bscNodes","process","ethNodes","getNodeUrl","chain","randomIndex","random","length","toastsSlice","createSlice","initialState","data","reducers","push","action","payload","unshift","remove","clear","actions","WalletWatchedStorageKey","tokens","getTokens","pools","getPools","configSlice","setConfig","setWalletWatched","wallet","removeItem","updateWalletWatched","address","BASE_URL","env","REACT_APP_REST_API_BASE_URL","getDefaultParams","network","toLocaleLowerCase","status","vaultRequest","params","options","reqParams","pure","Object","assign","baseRequest","url","str","stringify","fetch","response","json","result","fetchPools","fetchUserInfo","vaultAddress","fetchPoolsApi","results","item","some","pi","poolName","getPoolName","map","token0","token1","rest","fetchPoolsData","filterPool","calls","createCalls","pool","multicall","resolveResults","index","totalSupply","toJSON","fetchPoolsUserData","share","token0Position","toString","token1Position","fetchPoolsAllowance","getAddress","allowances","token0Allowance","token1Allowance","fetchUserBalances","balances","tokenBalances","token0Balance","token1Balance","fetchUserPositions","Promise","all","deposits","positions","profits","poolsSlice","setPoolsPublicData","livePoolsData","livePoolData","find","f","stale","setPoolsUserData","userData","usePoolData","entry","updatePoolsUserData","field","findIndex","p","poolsData","forEach","fetchPoolsUserDataAsync","allowance","shares","blockSlice","currentBlock","initialBlock","createBrowserHistory","bscChainId","parseInt","ethChainId","injected","InjectedConnector","supportedChainIds","useConnectors","useMemo","ConnectorNames","Injected","WalletConnect","WalletConnectConnector","rpc","bridge","qrcode","getWalletconnect","RefreshContextProvider","setSlow","setFast","prev","BSCPools","ETHPools","getPriceToUSDC","vToken","usdc","usdcToken","Token","ChainId","MAINNET","decimals","token","Fetcher","fetchPairData","pair","route","Route","midPrice","invert","toSignificant","async","symbol","prices","USDC","createAsyncThunk","priceHelper","respHandler","resp","updated_at","String","Date","now","pricesSlice","isLoading","lastUpdated","updatePrice","extraReducers","builder","addCase","pending","fulfilled","tokenList","tokensData","bnb","wbnb","projectLink","weth","BSCTokenList","ETHTokenList","BSCTokens","ETHTokens","getToken","requestETHNetwork","REACT_APP_HECO_CHAIN_ID","request","method","nativeCurrency","rpcUrls","blockExplorerUrls","setupNetwork","activate","deactivate","toastError","msg","connectors","useCallback","connectorID","connector","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","walletconnect","close","nonETHTokens","isNativeAddress","balance","ethToken","getBalance","ethBalance","tokensSlice","setTokensPublicData","liveTokensData","liveTokenData","setTokensUserData","useTokenData","updateTokensUserData","fetchTokensUserDataAsync","getBalanceNumber","displayBalance","dividedBy","pow","toNumber","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","Math","max","toLocaleString","undefined","resources","zh","fe","fe_zh","en","fe_en","supportedLangs","getDeviceLanguages","langs","navigator","languages","lang","split","Array","from","Set","localLang","sysLang","includes","getUserLang","i18n","use","initReactI18next","lng","fallbackLng","ns","defaultNS","detection","lookupQuerystring","lookupCookie","lookupLocalStorage","debug","interpolation","escapeValue","CHAIN_ID","DEFAULT_CHAIN_ID","INJECTED_CHAIN_KEY","Handler","getEnv","_","REACT_APP_ENV","host","startsWith","origin","AccountModal","visible","onDismiss","useCopyToClipboard","copyToClipboard","useTranslation","title","footer","onCancel","type","onClick","success","TokenApprovals","target","rel","href","breakPoints","maxWidth","useMobile","useMediaQuery","WatchWalletCard","WalletCard","walletConfig","Watch","style","padding","cursor","ConnectModal","isMobile","newConfig","WatchWalletModal","WatchWalletForm","onDone","Form","useForm","form","formData","setFormData","layout","onValuesChange","validateFirst","rules","required","size","placeholder","WatchWallet","validate","validateFields","ethers","utils","isAddress","resolve","submit","args","catch","ok","wrapSubmit","block","UserBlock","accountEllipsis","substring","connectModalVisible","setConnectModalVisible","accountModalVisible","setAccountModalVisible","watchWalletModalVisible","setWatchWalletModalVisible","loginFunc","logoutFunc","shape","prevProps","nextProps","DEFAULT_META","description","image","customMeta","TopNotificationBar","items","width","backgroundColor","slice","NotificationItem","NotificationOutlined","PageMeta","pageMeta","pageTitle","property","content","PageContainer","Strong","header","borderBottom","PageHeader","lineHeight","Footer","MenuItem","des","isLink","open","minWidth","opacity","productsMenus","icon","RiseOutlined","GoldOutlined","CalendarOutlined","showArrow","auditsMenus","docs","docsMenus","socials","socialMenus","Langs","onChange","changeLanguage","Option","Navbar","deviceLang","overlay","placement","DownOutlined","MobileNavbar","abi","multi","Contract","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","list","unit","reduce","concat","UNKNOWN","getTestChainId","withDefault","mulltiCall","getContracts","BSCContracts","ETHContracts","addresses","layersSlice","show","layerId","oldLayer","hide","configureStore","devTools","reducer","configReducer","pricesReducer","layers","layersReducer","blockReducer","poolsReducer","toasts","toastReducer","tokenReducer","useDispatch","PoolType","tier","vaultId","replace","join","getPoolUser","validPoolFilter","gloablKey","prevChainId","getDefaultInjectedChainId","JSON","parse","cid","ready"],"mappings":"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","file":"static/js/main.dac53b12.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport useAuth from 'hooks/web3/useAuth'\nimport { connectorLocalStorageKey, ConnectorNames } from 'common/types'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\n\nconst Menu = (props) => {\n  \n  return (\n    <div className=\"menu\" {...props}></div>\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","/* eslint-disable no-unneeded-ternary */\nimport React, { useState } from 'react'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  // const [isDark, setIsDark] = useState(() => {\n  //   const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n  //   return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  // })\n  const keyId = 'theme_type'\n  // const defaultValue = localData === 'dark' ? true : false\n  const defaultValue = true\n  const [isDark, setIsDark] = useState(defaultValue)\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      sessionStorage.setItem(keyId, !prevState ? 'dark' : 'light')\n      return !prevState\n    })\n  }\n\n  return <ThemeContext.Provider value={{ isDark, toggleTheme }}>{children}</ThemeContext.Provider>\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  return { isDark, toggleTheme, theme: 'dark' }\n}\n\nexport default useTheme\n","import { Spin } from 'antd'\nimport React from 'react'\nimport Page from '../layout/Page'\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Page className=\"d-flex center-vh\">\n      <Spin className=\"h-v100 center-vh\" />\n    </Page>\n  )\n}\n\nexport default PageLoader\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n","import React, { useEffect, lazy } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/web3/useEagerConnect'\nimport { useConfig, useFetchPriceList, useFetchPublicData } from 'state/hooks'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport history from './routerHistory'\nimport { useChainContext } from 'contexts/ChainContext'\nimport { useAppDispatch } from 'state'\nimport useTheme from 'hooks/ui/useTheme'\nimport './style/App.less'\nimport PageLoader from 'components/PageLoader/PageLoader'\nimport ScrollToTop from 'components/ScrollToTop'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Backtest = lazy(() => import('./views/Backtest'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { chainId } = useChainContext()\n  const dispatch = useAppDispatch()\n  const config = useConfig()\n  const { isDark } = useTheme()\n\n  useEffect(() => {\n    console.warn = () => null\n  }, [dispatch])\n\n  useEffect(() => { }, [chainId, dispatch, config])\n\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchPriceList()\n\n  return (\n    <Router history={history}>\n      <div className={isDark ? 'isDark' : ''}>\n        <Menu>\n          {/* TODO: fallback */}\n          <SuspenseWithChunkError fallback={<PageLoader />}>\n            <Switch>\n              <Route path=\"/backtest\" exact>\n                <ScrollToTop />\n                <Backtest />\n              </Route>\n              {/* 404 */}\n              <Route component={Backtest} />\n            </Switch>\n          </SuspenseWithChunkError>\n        </Menu>\n      </div>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export const EN = { code: 'en', language: 'English' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\n// export const ZHTW = { code: 'zh-TW', language: '繁體中文' }\n\nexport const allLanguages = [EN, ZHCN]\n","import React, { useState, useEffect } from 'react'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'onegateFinanceLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(null)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React from 'react'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ChainContextProvider } from 'contexts/ChainContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <ChainContextProvider>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Provider store={store}>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageContextProvider>\n                <RefreshContextProvider>\n                  {/* TODO: modal */}\n                  {/* <ModalProvider></ModalProvider> */}\n                  {children}\n                </RefreshContextProvider>\n              </LanguageContextProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </Provider>\n      </Web3ReactProvider>\n    </ChainContextProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'i18n'\nimport App from './App'\nimport Providers from './Providers'\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { initGlobal } from 'utils/global'\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Providers>\n        <App />\n      </Providers>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  )\n}\n\nasync function init() {\n  const provider: any = await detectEthereumProvider()\n\n  if (provider) {\n    initGlobal(Number(provider.chainId))\n  }\n\n  render()\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  init()\n})\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import useWeb3 from 'hooks/web3/useWeb3'\nimport React, { useContext, useLayoutEffect, useState } from 'react'\nimport { getChainById } from 'utils/chain'\nimport { getDefaultChaindId, getGlobal, storeInjectedChainId } from 'utils/global'\n\nconst DEFAULT_CHAIN_NAME = 'BSC'\n\nconst ChainContext = React.createContext({\n  chainId: getDefaultChaindId(),\n  chainName: DEFAULT_CHAIN_NAME,\n  setChainId: (id: number) => {\n    console.log('🚀 ~ file: ChainContext.tsx ~ line 11 ~ id', id)\n  },\n})\n\nconst ChainContextProvider = ({ children }) => {\n  const global = getGlobal()\n  const [chainId, setChainId] = useState(global.chainId)\n  const chainName = getChainById(chainId)\n  const web3 = useWeb3()\n\n  useLayoutEffect(() => {\n    web3.eth.getChainId().then((id) => {\n      if (id) {\n        global.chainId = id\n        setChainId(id)\n      }\n    })\n    const eth = window.ethereum as any\n\n    eth?.on('chainChanged', (t) => {\n      storeInjectedChainId(t)\n      setTimeout(() => {\n        window.location.reload()\n      })\n    })\n  }, [web3, global])\n\n  return <ChainContext.Provider value={{ chainId, chainName, setChainId }}>{children}</ChainContext.Provider>\n}\n\nfunction useChainContext() {\n  return useContext(ChainContext)\n}\n\nexport { ChainContext, ChainContextProvider, useChainContext }\n","import erc20 from 'config/abi/bsc/erc20.json'\nimport Multicall from 'config/abi/bsc/Multicall.json'\nimport onegateVault from 'config/abi/bsc/onegateVault.json'\nimport WETH from 'config/abi/bsc/WETH.json'\n\nimport { IABIConfig } from './types'\n\nexport default {\n  erc20,\n  Multicall,\n  onegateVault,\n  WETH,\n} as IABIConfig\n","import erc20 from 'config/abi/eth/erc20.json'\nimport Multicall from 'config/abi/eth/Multicall.json'\nimport onegateVault from 'config/abi/eth/onegateVault.json'\nimport WETH from 'config/abi/eth/WETH.json'\n\nimport { IABIConfig } from './types'\n\nexport default {\n  erc20,\n  Multicall,\n  onegateVault,\n  WETH,\n} as IABIConfig\n","import { CHAIN } from 'config/constants/chain'\nimport { getChain } from 'utils/chain'\nimport { isGlobalReady } from 'utils/global'\nimport bscABIs from './bsc'\nimport ethABIs from './eth'\nimport { IABIConfig } from './types'\n\nexport function getABI(name: string) {\n  const chain = getChain()\n\n  switch (chain) {\n    case CHAIN.BSC:\n      return bscABIs[name]\n    case CHAIN.ETH:\n    default:\n      return ethABIs[name]\n  }\n}\n\nconst handler = {\n  get(obj, prop) {\n    if (!isGlobalReady()) {\n      console.warn('ABI not ready')\n    }\n    return getABI(prop)\n  },\n}\n\nexport const ABI = new Proxy<IABIConfig>({} as IABIConfig, handler)\n","/* eslint-disable dot-notation */\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst getWeb3NoAccount = () => {\n  const RPC_URL = getRpcUrl()\n  const httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n  const web3NoAccount = new Web3(httpProvider)\n\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\n\nexport default getWeb3NoAccount()\n\nwindow['__OG_WEB3__'] = getWeb3NoAccount()\n","/* eslint-disable dot-notation */\n\nimport { State } from './types'\n\n// 有限的场景使用\n// layers: showLayer/hideLayer\nexport const setStore = (store) => {\n  window['__OG_STROE__'] = store\n}\n\nexport const getStore = () => {\n  return window['__OG_STROE__']\n}\n\nexport function getState(): State {\n  return getStore().getState()\n}\n\nexport const getDispatch = () => {\n  const store = getStore()\n  return store.dispatch\n}\n","import { ConnectorNames } from 'common/types'\n\nexport enum ToastTypes {\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n}\n\nexport type Login = (connectorId: ConnectorNames) => void\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useWeb3React } from '@web3-react/core'\n\nimport { ToastTypes } from 'components/types'\nimport { useChainContext } from 'contexts/ChainContext'\nimport useRefresh from 'hooks/context/useRefresh'\nimport { useAppDispatch } from 'state'\nimport { getPoolUser } from 'utils/pool'\nimport { getWeb3NoAccount } from 'utils/web3'\n\nimport { clear as clearToast, push as pushToast, remove as removeToast, setBlock } from './actions'\nimport { fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './pools'\nimport { fetchPrices } from './prices'\nimport { fetchTokensUserDataAsync } from './tokens'\nimport { ConfigState, Message, Pool, PriceApiListThunk, PriceState, State } from './types'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { chainId } = useChainContext()\n  const config = useConfig()\n\n  useEffect(() => {\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh, chainId, config])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, chainId])\n}\n\nexport const useConfig = (): ConfigState => {\n  const config = useSelector((state: State) => state.config)\n\n  return config\n}\n\nexport function useWalletWatched() {\n  const { walletWatched } = useConfig()\n\n  return { walletWatched, isWatching: Boolean(walletWatched) }\n}\n\nexport function useAccount() {\n  const { walletWatched, isWatching } = useWalletWatched()\n  const { account } = useWeb3React()\n\n  return {\n    account: walletWatched || account,\n    isWatching,\n  }\n}\n\n// Pools\nexport const usePools = (account: string): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const config = useConfig()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, config, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n\n  return pools\n}\n\nexport const usePool = (poolName): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((f) => f.poolName === poolName))\n\n  return pool\n}\n\nexport function usePoolUser(poolName: string) {\n  const pool = usePool(poolName)\n\n  return getPoolUser(pool)\n}\n\nexport const usePrices = (): PriceApiListThunk => {\n  const prices = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useTokens = (account: string) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const config = useConfig()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchTokensUserDataAsync(account))\n    }\n  }, [account, config, dispatch, fastRefresh])\n\n  const tokens = useSelector((state: State) => state.tokens.data)\n\n  return tokens\n}\n\nexport const useToken = (symbol: string) => {\n  const token = useSelector((state: State) => state.tokens.data.find((item) => item.symbol === symbol))\n\n  return token\n}\n\nexport const useTokenUser = (symbol: string) => {\n  const token = useToken(symbol)\n\n  return {\n    balance: new BigNumber(token.userData?.balance ?? 0),\n  }\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  const config = useConfig()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh, config])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Toast\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Message) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (content: string) => {\n        return push({ type: ToastTypes.DANGER, content })\n      },\n      toastInfo: (content: string) => {\n        return push({ type: ToastTypes.INFO, content })\n      },\n      toastSuccess: (content: string) => {\n        return push({ type: ToastTypes.SUCCESS, content })\n      },\n      toastWarning: (content: string) => {\n        return push({ type: ToastTypes.WARNING, content })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n","import { CHAIN } from 'config/constants/chain'\nimport random from 'lodash/random'\nimport { getChain } from './chain'\n\n// Array of available nodes to connect to\nexport const bscNodes = [\n  process.env.REACT_APP_BSC_NODE_1,\n  process.env.REACT_APP_BSC_NODE_2,\n  process.env.REACT_APP_BSC_NODE_3,\n]\n\nexport const ethNodes = [\n  process.env.REACT_APP_ETH_NODE_1,\n  process.env.REACT_APP_ETH_NODE_2,\n  process.env.REACT_APP_ETH_NODE_3,\n]\n\nconst getNodeUrl = (chain = getChain()) => {\n  const randomIndex = random(0, bscNodes.length - 1)\n\n  switch (chain) {\n    case CHAIN.BSC:\n      return bscNodes[randomIndex]\n    case CHAIN.ETH:\n    default:\n      return ethNodes[randomIndex]\n  }\n}\n\nexport default getNodeUrl\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Message, ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Message>) => {\n      const { payload } = action\n      // const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // // If id already matches remove it before adding it to the top of the stack\n      // if (toastIndex >= 0) {\n      //   state.data.splice(toastIndex, 1)\n      // }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      console.log('🚀 ~ file: index.ts ~ line 25 ~ state', state, action)\n      // const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n      // if (toastIndex >= 0) {\n      //   state.data.splice(toastIndex, 1)\n      // }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport getPools from 'config/constants/pools'\nimport getTokens from 'config/constants/tokens'\nimport { ConfigState } from '../types'\n\nconst WalletWatchedStorageKey = 'vaultWalletWatched'\nconst initialState: ConfigState = {\n  tokens: getTokens(),\n  pools: getPools(),\n  walletWatched: localStorage.getItem(WalletWatchedStorageKey),\n}\n\nexport const configSlice = createSlice({\n  name: 'Config',\n  initialState,\n  reducers: {\n    setConfig: (state, action) => {\n      const config: ConfigState = action.payload\n\n      state.tokens = config.tokens\n      state.pools = config.pools\n    },\n    setWalletWatched: (state, action) => {\n      const wallet: string = action.payload\n      state.walletWatched = wallet\n      if (wallet) {\n        localStorage.setItem(WalletWatchedStorageKey, wallet)\n      } else {\n        localStorage.removeItem(WalletWatchedStorageKey)\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setConfig, setWalletWatched } = configSlice.actions\n\nexport const updateWalletWatched = (address: string) => async (dispatch) => {\n  dispatch(setWalletWatched(address))\n}\n\nexport default configSlice.reducer\n","import { stringify } from 'query-string'\n\nimport { env } from 'config/env'\nimport { getChain } from 'utils/chain'\n\nconst BASE_URL = env.REACT_APP_REST_API_BASE_URL\nconst COINGECKO_BASE_URL = 'https://api.coingecko.com/api/v3'\n\ninterface Params {\n  [key: string]: any\n}\n\ninterface RequestOptions {\n  pure?: boolean\n}\n\nfunction getDefaultParams(): Params {\n  const chain = getChain()\n  const network = chain === 'ETH' ? 'mainnet' : chain.toLocaleLowerCase()\n\n  return {\n    network,\n    status: process.env.REACT_APP_REST_API_STATUS,\n  }\n}\n\nexport async function vaultRequest(path: string, params: Params = {}, options: RequestOptions = {}) {\n  const reqParams = options.pure ? params : Object.assign(getDefaultParams(), params)\n\n  return baseRequest(`${BASE_URL}${path}`, reqParams)\n}\n\nexport async function coingeckoRequest(path: string, params: Params = {}) {\n  return baseRequest(`${COINGECKO_BASE_URL}${path}`, params)\n}\n\nasync function baseRequest(url: string, params: Params = {}) {\n  const str = stringify(params)\n\n  try {\n    const response = await fetch(`${url}?${str}`)\n    const result = await response.json()\n\n    return result\n  } catch (error) {\n    console.log('request error', error)\n    return null\n  }\n}\n","import { vaultRequest } from './base'\nimport {\n  DepositorModel,\n  DepositorsParams,\n  DepositRecordModel,\n  DepositRecordsParams,\n  FeeApyDataModel,\n  FeeApyDayDataParams,\n  FeeApySumByDayDataModel,\n  FeeApySumByDayDataParams,\n  FeeCollectedDataModel,\n  FeeCollectedDataParams,\n  MyDepositModel,\n  MyDepositsParams,\n  NetAprDataModel,\n  NetAprDataParams,\n  NetProfitModel,\n  NetProfitParams,\n  NetReturnDataModel,\n  NetReturnDataParams,\n  OverviewModel,\n  PaginationModel,\n  PoolModel,\n  RebalanceRecordModel,\n  RebalanceRecordsParams,\n  Results,\n  TokenModel,\n  TvlRecordModel,\n  TvlRecordsParams,\n  UserInfoModel,\n  WithdrawRecordModel,\n  WithdrawRecordsParams,\n} from './model'\n\nexport function fetchDataOverview(): Promise<Results<OverviewModel>> {\n  return vaultRequest('/universe/overview')\n}\n\nexport function fetchTokens(): Promise<Results<TokenModel[]>> {\n  return vaultRequest('/universe/tokens')\n}\n\nexport function fetchPools(): Promise<Results<PoolModel[]>> {\n  return vaultRequest('/universe/pools')\n}\n\nexport function fetchUserInfo(vaultAddress: string, account: string): Promise<Results<UserInfoModel>> {\n  return vaultRequest('/universe/userInfo', {\n    vaultAddress,\n    account,\n  })\n}\n\nexport function fetchFeeApyData(params: FeeApyDayDataParams): Promise<Results<FeeApyDataModel[]>> {\n  return vaultRequest('/universe/feeApyDayData', params)\n}\n\nexport function fetchFeeApySumData(params: FeeApySumByDayDataParams): Promise<Results<FeeApySumByDayDataModel[]>> {\n  return vaultRequest('/universe/feeApySumByDayData', params, { pure: true })\n}\n\nexport function fetchNetReturnData(params: NetReturnDataParams): Promise<Results<NetReturnDataModel[]>> {\n  return vaultRequest('/universe/netReturnData', params, { pure: true })\n}\n\nexport function fetchNetAprData(params: NetAprDataParams): Promise<Results<NetAprDataModel[]>> {\n  return vaultRequest('/universe/netAprData', params, { pure: true })\n}\n\nexport function fetchTvlRecords(params: TvlRecordsParams): Promise<Results<TvlRecordModel[]>> {\n  return vaultRequest('/universe/tvlDayRecords', params, { pure: true })\n}\n\nexport function fetchFeeCollectedData(params: FeeCollectedDataParams): Promise<Results<FeeCollectedDataModel[]>> {\n  return vaultRequest('/universe/feeDayRecords', params, { pure: true })\n}\n\nexport function fetchDepositRecords(\n  params: DepositRecordsParams,\n): Promise<Results<PaginationModel<DepositRecordModel>>> {\n  return vaultRequest('/universe/depositRecords', params, { pure: true })\n}\n\nexport function fetchWithdrawRecords(\n  params: WithdrawRecordsParams,\n): Promise<Results<PaginationModel<WithdrawRecordModel>>> {\n  return vaultRequest('/universe/withdrawRecords', params, { pure: true })\n}\n\nexport function fetchRebalanceRecords(\n  params: RebalanceRecordsParams,\n): Promise<Results<PaginationModel<RebalanceRecordModel>>> {\n  return vaultRequest('/universe/rebalanceRecords', params, { pure: true })\n}\n\nexport function fetchNetProfit(params: NetProfitParams): Promise<Results<NetProfitModel>> {\n  return vaultRequest('/universe/netProfit', params, { pure: true })\n}\n\nexport function fetchDepositors(params: DepositorsParams): Promise<Results<PaginationModel<DepositorModel>>> {\n  return vaultRequest('/universe/depositors', params, { pure: true })\n}\n\nexport function fetchMyDeposits(params: MyDepositsParams): Promise<Results<MyDepositModel[]>> {\n  return vaultRequest('/universe/mydeposits', params, { pure: true })\n}\n","import BigNumber from 'bignumber.js'\nimport { ABI } from 'config/abi'\nimport { PoolInfo } from 'config/constants/types'\nimport { fetchPools as fetchPoolsApi } from 'service/vault'\nimport { ConfigState } from 'state/types'\nimport multicall, { createCalls, resolveResults } from 'utils/multicall'\nimport { filterPool, getPoolName } from 'utils/pool'\n\nexport async function fetchPools(config: ConfigState): Promise<Omit<PoolInfo, 'token0' | 'token1'>[]> {\n  const results = await fetchPoolsApi()\n\n  return (results?.data ?? [])\n    .filter((item) => config.pools.some((pi) => pi.poolName === getPoolName(item)))\n    .map((item) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { token0, token1, ...rest } = item\n\n      return {\n        poolName: getPoolName(item),\n        ...rest,\n      }\n    })\n}\n\nexport async function fetchPoolsData(config: ConfigState) {\n  const pools = filterPool(config.pools)\n  const calls = createCalls(pools, (pool) => [\n    {\n      address: pool.vaultAddress,\n      name: 'totalSupply',\n      params: [],\n    },\n  ])\n  const results = await multicall(ABI.onegateVault, calls)\n\n  return resolveResults(pools, (pool, index) => {\n    return {\n      [pool.poolName]: {\n        totalSupply: new BigNumber(results[index]).toJSON(),\n      },\n    }\n  })\n}\n","import multicall, { createCalls, resolveResults } from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\nimport { ABI } from 'config/abi'\nimport { ConfigState } from 'state/types'\nimport { fetchUserInfo } from 'service/vault'\nimport { filterPool } from 'utils/pool'\n\nexport const fetchPoolsUserData = async (account, config: ConfigState) => {\n  const pools = filterPool(config.pools)\n  const calls = createCalls(pools, (pool) => [\n    {\n      address: pool.vaultAddress,\n      name: 'balanceOf',\n      params: [account],\n    },\n    {\n      address: pool.vaultAddress,\n      name: 'getUserBalance',\n      params: [account],\n    },\n  ])\n  const results = await multicall(ABI.onegateVault, calls)\n\n  return resolveResults(pools, (pool, index) => {\n    return {\n      [pool.poolName]: {\n        share: new BigNumber(results[2 * index]).toJSON(),\n        token0Position: results[2 * index + 1][0].toString(),\n        token1Position: results[2 * index + 1][1].toString(),\n      },\n    }\n  })\n}\n\nexport const fetchPoolsAllowance = async (account, config: ConfigState) => {\n  const pools = filterPool(config.pools)\n  const calls = createCalls(pools, (pool) => [\n    {\n      address: getAddress(pool.token0.address),\n      name: 'allowance',\n      params: [account, pool.vaultAddress],\n    },\n    {\n      address: getAddress(pool.token1.address),\n      name: 'allowance',\n      params: [account, pool.vaultAddress],\n    },\n  ])\n\n  const allowances = await multicall(ABI.erc20, calls)\n\n  return resolveResults(pools, (pool, index) => {\n    return {\n      [pool.poolName]: {\n        token0Allowance: new BigNumber(allowances[2 * index]).toJSON(),\n        token1Allowance: new BigNumber(allowances[2 * index + 1]).toJSON(),\n      },\n    }\n  })\n}\n\nexport const fetchUserBalances = async (account, config: ConfigState) => {\n  const pools = filterPool(config.pools)\n  const calls = createCalls(pools, (pool) => [\n    {\n      address: getAddress(pool.token0.address),\n      name: 'balanceOf',\n      params: [account],\n    },\n    {\n      address: getAddress(pool.token1.address),\n      name: 'balanceOf',\n      params: [account],\n    },\n  ])\n  const balances = await multicall(ABI.erc20, calls)\n  const tokenBalances = resolveResults(pools, (pool, index) => {\n    return {\n      [pool.poolName]: {\n        token0Balance: new BigNumber(balances[2 * index]).toJSON(),\n        token1Balance: new BigNumber(balances[2 * index + 1]).toJSON(),\n      },\n    }\n  })\n\n  return { ...tokenBalances }\n}\n\nexport async function fetchUserPositions(account, config: ConfigState) {\n  const pools = filterPool(config.pools)\n  const calls = pools.map((pool) => fetchUserInfo(pool.vaultAddress, account))\n  const results = await Promise.all(calls)\n\n  return resolveResults(pools, (pool, index) => {\n    return {\n      [pool.poolName]: {\n        deposits: results[index]?.data?.deposits ?? null,\n        // NOTE: Profit actually represents the position\n        positions: results[index]?.data?.profits ?? null,\n      },\n    }\n  })\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport getPools from 'config/constants/pools'\nimport { filterPool } from 'utils/pool'\nimport { ConfigState, Pool, PoolsState } from '../types'\nimport { fetchPools, fetchPoolsData } from './fetchPools'\nimport { fetchPoolsAllowance, fetchPoolsUserData, fetchUserBalances, fetchUserPositions } from './fetchPoolsUser'\n\nconst initialState: PoolsState = { data: [...getPools()] }\n\nexport const poolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((f) => f.poolName === pool.poolName)\n        return { ...pool, ...livePoolData, stale: false }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const usePoolData = userData.find((entry) => entry.poolName === pool.poolName)\n\n        return { ...pool, ...usePoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, poolName } = action.payload\n      const index = state.data.findIndex((p) => p.poolName === poolName)\n\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = poolsSlice.actions\n\nexport const fetchPoolsPublicDataAsync = () => async (dispatch, getState) => {\n  const { config } = getState()\n  const pools: any = await fetchPools(config)\n  const poolsData = await fetchPoolsData(config)\n\n  pools\n    .filter((item) => item.state !== 1)\n    .forEach((pool) => {\n      pool.totalSupply = poolsData[pool.poolName]?.totalSupply\n    })\n\n  dispatch(setPoolsPublicData(pools))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch, getState) => {\n  const { config } = getState()\n  const pools = filterPool((config as ConfigState).pools)\n  const allowance = await fetchPoolsAllowance(account, config)\n  const balances = await fetchUserBalances(account, config)\n  const shares = await fetchPoolsUserData(account, config)\n  const positions = await fetchUserPositions(account, config)\n\n  const userData = pools.map((pool) => ({\n    poolName: pool.poolName,\n    userData: {\n      token0Allowance: allowance[pool.poolName].token0Allowance,\n      token1Allowance: allowance[pool.poolName].token1Allowance,\n      token0Balance: balances[pool.poolName].token0Balance,\n      token1Balance: balances[pool.poolName].token1Balance,\n      share: shares[pool.poolName].share,\n      token0Position: shares[pool.poolName].token0Position,\n      token1Position: shares[pool.poolName].token1Position,\n      deposits: positions[pool.poolName].deposits,\n      positions: positions[pool.poolName].positions,\n    },\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updatePoolUserAllowance = (poolName: string, account: string) => async (dispatch, getState) => {\n  const { config } = getState()\n  const allowance: any = await fetchPoolsAllowance(account, config)\n\n  dispatch(\n    updatePoolsUserData({\n      poolName,\n      allowances: {\n        token0Allowance: allowance.token0Allowance,\n        token1Allowance: allowance.token1Allowance,\n      },\n    }),\n  )\n}\n\nexport default poolsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { useMemo } from 'react'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\nimport { ConnectorNames } from 'common/types'\n\n// const POLLING_INTERVAL = 12000\nconst bscChainId = parseInt(process.env.REACT_APP_BSC_CHAIN_ID, 10)\nconst ethChainId = parseInt(process.env.REACT_APP_ETH_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [ethChainId, bscChainId] })\n\nconst getWalletconnect = (chainId: number) => {\n  return new WalletConnectConnector({\n    rpc: { [chainId]: getNodeUrl() },\n    // FIXME: Maybe should create a bridge\n    bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n    qrcode: true,\n  })\n}\n\nexport const useConnectors = (chainId: number) => {\n  return useMemo(() => {\n    return {\n      [ConnectorNames.Injected]: injected,\n      [ConnectorNames.WalletConnect]: getWalletconnect(chainId),\n    }\n  }, [chainId])\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","import React, { useState, useEffect } from 'react'\nimport { useChainContext } from './ChainContext'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { chainId } = useChainContext()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => {\n      clearInterval(interval)\n      setFast(0)\n    }\n  }, [chainId])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => {\n      clearInterval(interval)\n      setSlow(0)\n    }\n  }, [chainId])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { CHAIN } from './chain'\nimport BSCPools from './bsc/pools.json'\nimport ETHPools from './eth/pools.json'\nimport { getChain } from 'utils/chain'\nimport { PoolInfo } from './types'\n\nexport default function getPools(): PoolInfo[] {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return BSCPools\n    case CHAIN.ETH:\n    default:\n      return ETHPools\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiThunk, PriceState } from 'state/types'\nimport { getState } from 'state/utils'\nimport { ChainId, Token, Fetcher, Route } from '@uniswap/sdk'\nimport { VToken } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: {},\n}\n\nasync function getPriceToUSDC(vToken: VToken, usdc: VToken) {\n  const usdcToken = new Token(ChainId.MAINNET, getAddress(usdc.address), usdc.decimals)\n  const token = new Token(ChainId.MAINNET, getAddress(vToken.address), vToken.decimals)\n\n  const pair = await Fetcher.fetchPairData(token, usdcToken)\n\n  const route = new Route([pair], usdcToken)\n\n  return route.midPrice.invert().toSignificant(6)\n}\n\nasync function getTokens() {\n  const tokens = getState().config.tokens.filter((item) => item.symbol !== 'ETH' && item.symbol !== 'USDC')\n  const usdc = getState().config.tokens.find((item) => item.symbol === 'USDC')\n  const prices = {\n    USDC: '1',\n  }\n\n  for await (const token of tokens) {\n    try {\n      prices[token.symbol] = await getPriceToUSDC(token, usdc)\n    } catch (error) {\n      console.log('fetch token price error: ', error)\n    }\n  }\n\n  return prices\n}\n\nfunction getPriceHelper() {\n  return {\n    getTokens,\n\n    respHandler(resp) {\n      const data = resp\n\n      return {\n        updated_at: String(Date.now()),\n        data,\n      }\n    },\n  }\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const priceHelper = getPriceHelper()\n  const response = await priceHelper.getTokens()\n\n  // Return normalized token names\n  return priceHelper.respHandler(response)\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {\n    updatePrice: (state, action) => {\n      state.data = {\n        ...state.data,\n        ...action.payload,\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport const { updatePrice } = pricesSlice.actions\n\nexport default pricesSlice.reducer\n","import tokensData from './tokens.json'\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    address: {\n      56: '0x0000000000000000000000000000000000000000',\n      97: '0x0000000000000000000000000000000000000000',\n    },\n    decimals: 18,\n  },\n  wbnb: {\n    symbol: 'WBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n}\n\nexport const tokenList = [...tokensData]\n\nexport default tokens\n","import tokensData from './tokens.json'\n\nconst tokens = {\n  eth: {\n    symbol: 'ETH',\n    address: {\n      1: '0x0000000000000000000000000000000000000000',\n      3: '0x0000000000000000000000000000000000000000',\n    },\n    decimals: 18,\n  },\n  weth: {\n    symbol: 'WETH',\n    address: {\n      1: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n      3: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n}\n\nexport const tokenList = [...tokensData]\n\nexport default tokens\n","import { CHAIN } from './chain'\nimport BSCTokens, { tokenList as BSCTokenList } from './bsc/tokens'\nimport ETHTokens, { tokenList as ETHTokenList } from './eth/tokens'\nimport { isGlobalReady } from 'utils/global'\nimport { getChain } from 'utils/chain'\nimport { ITokens } from './types'\n\nexport default function getTokens() {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return BSCTokenList\n    case CHAIN.ETH:\n    default:\n      return ETHTokenList\n  }\n}\n\nfunction getToken(name: string) {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return BSCTokens[name]\n    case CHAIN.ETH:\n    default:\n      return ETHTokens[name]\n  }\n}\n\nconst handler = {\n  get(obj, prop) {\n    if (!isGlobalReady()) {\n      console.warn('Tokens not ready')\n    }\n    return getToken(prop)\n  },\n}\n\nexport const Tokens: ITokens = new Proxy({}, handler)\n","// Set of helper functions to facilitate wallet setup\n\nimport { CHAIN } from 'config/constants/chain'\nimport { bscNodes, ethNodes } from './getRpcUrl'\n\nexport async function requestBSCNetwork(provider) {\n  const chainId = parseInt(process.env.REACT_APP_BSC_CHAIN_ID, 10)\n  try {\n    await provider.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: `0x${chainId.toString(16)}`,\n          chainName: 'Binance Smart Chain Mainnet',\n          nativeCurrency: {\n            name: 'BNB',\n            symbol: 'bnb',\n            decimals: 18,\n          },\n          rpcUrls: bscNodes,\n          blockExplorerUrls: ['https://bscscan.com/'],\n        },\n      ],\n    })\n    return true\n  } catch (error) {\n    console.error(error)\n    return false\n  }\n}\n\nexport async function requestETHNetwork(provider) {\n  const chainId = parseInt(process.env.REACT_APP_HECO_CHAIN_ID, 10)\n  try {\n    await provider.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: `0x${chainId.toString(16)}`,\n          chainName: 'HECO Mainnet',\n          nativeCurrency: {\n            name: 'Heco',\n            symbol: 'HT',\n            decimals: 18,\n          },\n          rpcUrls: ethNodes,\n          blockExplorerUrls: ['https://hecoinfo.com'],\n        },\n      ],\n    })\n    return true\n  } catch (error) {\n    console.error(error)\n    return false\n  }\n}\n\n\nexport function getNetworkRequest(chain: CHAIN) {\n  switch (chain) {\n    case CHAIN.BSC:\n      return requestBSCNetwork\n    case CHAIN.ETH:\n    default:\n      return requestETHNetwork\n  }\n}\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const result = await requestETHNetwork(provider)\n\n    return result\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\n\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\n\nimport { connectorLocalStorageKey, ConnectorNames } from 'common/types'\nimport { useChainContext } from 'contexts/ChainContext'\nimport { setupNetwork } from 'utils/wallet'\nimport { useConnectors } from 'utils/web3React'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  // const { toastError } = useToast()\n  // TODO\n  const toastError = (name: string, msg: string) => {\n    console.log(name, msg)\n  }\n  const { chainId } = useChainContext()\n  const connectors = useConnectors(chainId)\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectors[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError('Provider Error', 'No provider was found')\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError('Authorization Error', 'Please authorize to access your account')\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(\"Can't find connector\", 'The connector config is wrong')\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [connectors],\n  )\n\n  const logout = useCallback(() => {\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectors.walletconnect.close()\n      connectors.walletconnect.walletConnectProvider = null\n      window.localStorage.removeItem('walletconnect')\n    }\n  }, [deactivate, connectors.walletconnect])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import multicall, { createCalls, resolveResults } from 'utils/multicall'\nimport { getAddress, isNativeAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\nimport { ABI } from 'config/abi'\nimport { ConfigState } from 'state/types'\n\nconst web3 = getWeb3NoAccount()\n\nexport const fetchUserBalances = async (account, config: ConfigState) => {\n  const { tokens } = config\n  const nonETHTokens = tokens.filter((token) => !isNativeAddress(getAddress(token.address)))\n  const calls = createCalls(nonETHTokens, (token) => [\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [account],\n    },\n  ])\n  const balances = await multicall(ABI.erc20, calls)\n  const tokenBalances = resolveResults(nonETHTokens, (token, index) => {\n    return {\n      [token.symbol]: {\n        balance: new BigNumber(balances[index]).toJSON(),\n      },\n    }\n  })\n  const ethToken = tokens.find((token) => isNativeAddress(getAddress(token.address)))\n  const ethBalance = await web3.eth.getBalance(account)\n\n  return { ...tokenBalances, [ethToken.symbol]: { balance: new BigNumber(ethBalance).toJSON() } }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport getTokens from 'config/constants/tokens'\nimport { ConfigState, TokenInfo, TokenState } from '../types'\nimport { fetchUserBalances } from './fetchTokensUser'\n\nconst initialState: TokenState = { data: [...getTokens()] }\n\nexport const tokensSlice = createSlice({\n  name: 'Tokens',\n  initialState,\n  reducers: {\n    setTokensPublicData: (state, action) => {\n      const liveTokensData: TokenInfo[] = action.payload\n\n      state.data = state.data.map((token) => {\n        const liveTokenData = liveTokensData.find((f) => f.symbol === token.symbol)\n        return { ...token, ...liveTokenData }\n      })\n    },\n    setTokensUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((token) => {\n        const useTokenData = userData.find((entry) => entry.symbol === token.symbol)\n\n        return { ...token, ...useTokenData }\n      })\n    },\n    updateTokensUserData: (state, action) => {\n      const { field, value, symbol } = action.payload\n      const index = state.data.findIndex((p) => p.symbol === symbol)\n\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setTokensPublicData, setTokensUserData, updateTokensUserData } = tokensSlice.actions\n\nexport const fetchTokensUserDataAsync = (account) => async (dispatch, getState) => {\n  const { config } = getState()\n  const tokens = (config as ConfigState).tokens\n  const balances = await fetchUserBalances(account, config)\n\n  const userData = tokens.map((token) => ({\n    symbol: token.symbol,\n    userData: {\n      balance: balances[token.symbol].balance,\n    },\n  }))\n\n  dispatch(setTokensUserData(userData))\n}\n\nexport default tokensSlice.reducer\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: Math.max(minPrecision, maxPrecision),\n  }\n  return number.toLocaleString(undefined, options)\n}\n\nexport const toSolidityBalance = (balance: string, decimals = 18) => {\n  // https://mikemcl.github.io/bignumber.js/#toFix\n  return new BigNumber(balance).times(new BigNumber(10).pow(decimals)).toFixed(0)\n}\n\nexport const toBigNumber = (amount: string, decimals = 18) => {\n  return new BigNumber(amount).times(new BigNumber(10).pow(decimals))\n}\n\nexport const toDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals)).toFixed(8, 1)\n  return displayBalance\n}\n\nexport function getAllowableBalance(inputBalance: string, maxBalance: number) {\n  return Number(inputBalance) > maxBalance ? maxBalance : Number(inputBalance)\n}\n\nexport const formatRawNumber = (number: number | string, decimals = 18, minPrecision = 2, maxPrecision = 2) => {\n  return formatNumber(getBalanceNumber(new BigNumber(number), decimals), minPrecision, maxPrecision)\n}\n","import i18n from 'i18next'\n// import LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next, useTranslation } from 'react-i18next'\n\n// eslint-disable-next-line camelcase\nimport fe_en from './locales/fe/en.json'\n// eslint-disable-next-line camelcase\nimport fe_zh from './locales/fe/zh.json'\n// eslint-disable-next-line camelcase\n\nconst resources = {\n  zh: {\n    fe: fe_zh,\n  },\n  en: {\n    fe: fe_en,\n  },\n}\n\nconst detection = {\n  // order and from where user language should be detected\n  // order: ['querystring', 'cookie', 'localStorage', 'navigator'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18n',\n  lookupLocalStorage: 'i18n',\n}\n\nconst supportedLangs = ['en', 'zh']\n\nexport function getDeviceLanguages() {\n  const langs = window.navigator.languages.map((lang) => lang.split('-')[0])\n\n  return Array.from(new Set(langs))\n}\n\nfunction getUserLang() {\n  const localLang = localStorage.getItem('currentLang')\n  const sysLang = getDeviceLanguages()[0]\n\n  if (localLang) {\n    return localLang\n  } else {\n    return supportedLangs.includes(sysLang) ? sysLang : 'en'\n  }\n}\n\nconst defaultLang = getUserLang()\n\nfunction getDefaultLang() {\n  const localLang = localStorage.getItem('currentLang')\n  return localLang || 'en'\n}\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    resources,\n    lng: getDefaultLang(),\n    fallbackLng: supportedLangs,\n    ns: ['fe', 'server'],\n    defaultNS: 'fe',\n    detection,\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  })\n\nexport default i18n\n\nexport const useI18n = () => {\n  const { t } = useTranslation()\n  return t\n}\n","export enum CHAIN {\n  ETH = 'ETH',\n  BSC = 'BSC',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum CHAIN_ID {\n  ETH_MAIN = '1',\n  ETH_TEST = '3',\n  BSC_MAIN = '56',\n  BSC_TEST = '97',\n  UNKNOWN = '0',\n}\n\nexport const DEFAULT_CHAIN_ID = 1\nexport const INJECTED_CHAIN_KEY = 'injectedLocalStorageKey'\n","export class Handler {\n  private env: Env\n\n  constructor(getEnv: () => Env) {\n    this.env = getEnv()\n  }\n\n  get(_, prop) {\n    return this.env[prop]\n  }\n}\n\nfunction getEnv() {\n  const isDev = ['dev'].some((str) => window.location.host.startsWith(str))\n\n  const val: Env = {\n    REACT_APP_ENV: isDev ? 'dev' : process.env.REACT_APP_ENV,\n    REACT_APP_REST_API_BASE_URL: window.location.origin\n  }\n\n  return val\n}\n\nexport interface Env {\n  REACT_APP_ENV: string\n  REACT_APP_REST_API_BASE_URL: string\n}\n\nexport const env: Env = new Proxy({}, new Handler(getEnv))\n","import { Button, message } from 'antd'\nimport Modal from 'antd/lib/modal/Modal'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useCopyToClipboard } from 'react-use'\n\nimport { connectorLocalStorageKey } from 'common/types'\n\ninterface Props {\n  isWatching?: boolean\n  account: string\n  logout: () => void\n  visible: boolean\n  onDismiss?: () => void\n}\n\nexport function AccountModal(props: Props) {\n  const { visible, account, logout, onDismiss } = props\n  const onLogout = () => {\n    logout()\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    onDismiss()\n  }\n  const [_, copyToClipboard] = useCopyToClipboard()\n  const onCopyAccount = () => {\n    copyToClipboard(account)\n    message.success('Copied')\n    console.log(_)\n  }\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Your wallet')} visible={visible} footer={null} onCancel={onDismiss}>\n      <div className=\"fs20 fw-bolder text-center\">{account}</div>\n      <div className=\"pt20\"></div>\n      <div className=\"cols-equal sh-4\">\n        <Button type=\"primary\" className=\"\" onClick={onCopyAccount}>\n          {t('global.copy')}\n        </Button>\n        <Button type=\"primary\" className=\"\" onClick={onLogout}>\n          {props.isWatching ? 'Stop Watching' : t('global.logout')}\n        </Button>\n      </div>\n      <TokenApprovals account={account} />\n    </Modal>\n  )\n}\n\ninterface TokenApprovalsProps {\n  account: string\n}\n\nfunction TokenApprovals(props: TokenApprovalsProps) {\n  const { t } = useTranslation()\n  return (\n    <div className=\"pt30 pb30\">\n      <a\n        className=\"ml5\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href={`https://etherscan.io/tokenapprovalchecker?search=${props.account}`}\n      >\n        {t('global.reapprove')}\n      </a>\n    </div>\n  )\n}\n","import { ConnectorNames } from 'common/types'\n\nexport interface ConfigItem {\n  title: string\n  connectorId: ConnectorNames\n}\n\nconst connectors: ConfigItem[] = [\n  {\n    title: 'MetaMask',\n    connectorId: ConnectorNames.Injected,\n  },\n  {\n    title: 'imToken',\n    connectorId: ConnectorNames.Injected,\n  },\n  {\n    title: 'WalletConnect',\n    connectorId: ConnectorNames.WalletConnect,\n  },\n  {\n    title: 'Others',\n    connectorId: ConnectorNames.Injected,\n  },\n]\n\nexport default connectors\n","import { useMediaQuery } from 'react-responsive'\n\nconst breakPoints = {\n  xl: { minWidth: 1600 },\n  lg: { minWidth: 1400, maxWidth: 1600 },\n  md: { minWidth: 1200, maxWidth: 140 },\n  sm: { minWidth: 980, maxWidth: 1200 },\n  mobile: { maxWidth: 980 },\n  pc: { minWidth: 980 },\n}\nexport const useMobile = () => useMediaQuery(breakPoints.mobile)\n\nexport const usePC = () => useMediaQuery(breakPoints.pc)\n\nexport function useDevice() {\n  const isMobile = useMediaQuery({ maxWidth: 960 }) // 手机\n  const isTablet = useMediaQuery({ minWidth: 961, maxWidth: 1200 }) // 平板电脑\n  const isLaptop = useMediaQuery({ minWidth: 1201, maxWidth: 1440 }) // 笔记本电脑\n  const isLargeLaptop = useMediaQuery({ minWidth: 1441, maxWidth: 1690 }) // 宽屏笔记本电脑\n  const isDesktop = useMediaQuery({ minWidth: 1690 }) // 台式机\n  switch (true) {\n    case isMobile:\n      return 'mobile'\n    case isTablet:\n      return 'tablet'\n    case isLaptop:\n      return 'laptop'\n    case isLargeLaptop:\n      return 'laptop-lg'\n    case isDesktop:\n      return 'desktop'\n    default:\n      return 'desktop'\n  }\n}\n\nexport function Device(props) {\n  const { type = 'pc' } = props\n  const isMobile = useMediaQuery(breakPoints.mobile)\n  const isPC = useMediaQuery(breakPoints.pc)\n  switch (true) {\n    case type === 'mobile' && isMobile:\n      return props.children\n    case type === 'pc' && isPC:\n      return props.children\n    default:\n      return null\n  }\n}\n","import { Divider } from 'antd'\nimport Modal from 'antd/lib/modal/Modal'\nimport React from 'react'\n\nimport { connectorLocalStorageKey, ConnectorNames } from 'common/types'\nimport { Login } from 'components/types'\n\nimport config, { ConfigItem } from './config'\nimport { useMobile } from 'components/Responsive'\n\ninterface Props {\n  login: Login\n  visible: boolean\n  onDismiss?: () => void\n}\n\nexport function ConnectModal(props: Props) {\n  const { visible, login, onDismiss } = props\n  const isMobile = useMobile()\n  let newConfig = [...config]\n  if (!isMobile) {\n    newConfig = newConfig.filter((item) => item.title !== 'imToken').filter((item) => item.title !== 'Others')\n  }\n  return (\n    <Modal title=\"Connect to a wallet\" visible={visible} footer={null} onCancel={() => onDismiss()}>\n      {newConfig.map((entry) => (\n        <WalletCard key={entry.title} login={login} walletConfig={entry} onDismiss={onDismiss} />\n      ))}\n      <Divider />\n      <WatchWalletCard login={login} onDismiss={onDismiss} />\n    </Modal>\n  )\n}\n\ninterface WatchWalletCardProps {\n  login: Login\n  onDismiss?: () => void\n}\n\nfunction WatchWalletCard(props: WatchWalletCardProps) {\n  return (\n    <WalletCard\n      login={props.login}\n      walletConfig={{ title: 'Watch a Wallet', connectorId: ConnectorNames.Watch }}\n      onDismiss={props.onDismiss}\n    />\n  )\n}\n\ninterface WalletCardProps {\n  login: Login\n  walletConfig: ConfigItem\n  onDismiss?: () => void\n}\n\nfunction WalletCard(props: WalletCardProps) {\n  const { login, onDismiss, walletConfig } = props\n  const onClick = () => {\n    login(walletConfig.connectorId)\n    window.localStorage.setItem(connectorLocalStorageKey, walletConfig.connectorId)\n    if (onDismiss) {\n      onDismiss()\n    }\n  }\n  return (\n    <div\n      className=\"fs16 fw-bolder bg-primary fc-black p15 box-round mb15\"\n      style={{ padding: '5px', cursor: 'pointer' }}\n      onClick={onClick}\n    >\n      {walletConfig.title}\n    </div>\n  )\n}\n\nexport default ConnectModal\n","import { Button, Form, FormInstance, Input, message } from 'antd'\nimport FormItem from 'antd/lib/form/FormItem'\nimport Modal from 'antd/lib/modal/Modal'\nimport { ethers } from 'ethers'\nimport React, { useCallback, useState } from 'react'\n\nimport { useAppDispatch } from 'state'\nimport { updateWalletWatched } from 'state/config'\nimport { wrapSubmit } from 'utils/form'\n\ninterface Props {\n  visible: boolean\n  onDismiss?: () => void\n}\n\nexport function WatchWalletModal(props: Props) {\n  const { visible, onDismiss } = props\n\n  return (\n    <Modal title=\"Watch a wallet\" visible={visible} footer={null} onCancel={onDismiss}>\n      <WatchWalletForm onDone={onDismiss} />\n    </Modal>\n  )\n}\n\ninterface WatchWalletFormData {\n  address: string\n}\n\ninterface WatchWalletFormProps {\n  onDone?: () => void\n}\nfunction WatchWalletForm(props: WatchWalletFormProps) {\n  const [form] = Form.useForm()\n  const [formData, setFormData] = useState<WatchWalletFormData>({\n    address: '',\n  })\n  const onValuesChange = (value) => {\n    setFormData({\n      ...formData,\n      ...value,\n    })\n  }\n\n  return (\n    <Form layout=\"vertical\" form={form} onValuesChange={onValuesChange}>\n      <FormItem name=\"address\" validateFirst rules={[{ required: true, message: 'Please enter the address' }]}>\n        <Input className=\"fc-grey-light\" size=\"large\" placeholder=\"Input address\" />\n      </FormItem>\n      <WatchWallet validate={form.validateFields} address={formData.address} onDone={props.onDone} />\n    </Form>\n  )\n}\n\ninterface WatchWalletProps {\n  address: string\n  validate: FormInstance['validateFields']\n  onDone?: () => void\n}\n\nfunction WatchWallet(props: WatchWalletProps) {\n  const { address, onDone } = props\n  const dispatch = useAppDispatch()\n  const login = useCallback(() => {\n    if (ethers.utils.isAddress(address)) {\n      dispatch(updateWalletWatched(address))\n\n      if (onDone) {\n        onDone()\n      }\n    } else {\n      message.warn('Please enter a correct wallet address')\n    }\n\n    return Promise.resolve(true)\n  }, [address, onDone, dispatch])\n\n  const submit = wrapSubmit(props.validate, login)\n\n  return (\n    <Button block type=\"primary\" className=\"fc-black\" onClick={() => submit()}>\n      Watch Wallet\n    </Button>\n  )\n}\n","import { FormInstance } from 'antd'\n\nexport function wrapSubmit<T extends any[]>(\n  validate: FormInstance['validateFields'],\n  submit: (...args: T) => Promise<any>,\n) {\n  return (...args: T) => {\n    const task = validate()\n      .then(() => true)\n      .catch(() => false)\n\n    return task.then((ok: boolean) => {\n      if (ok) {\n        return submit(...args)\n      } else {\n        return false\n      }\n    })\n  }\n}\n","import { Button } from 'antd'\nimport React, { useCallback, useState } from 'react'\n\nimport { ConnectorNames } from 'common/types'\nimport { Login } from 'components/types'\nimport { AccountModal } from 'components/WalletModal/AccountModal'\nimport ConnectModal from 'components/WalletModal/ConnectModal'\nimport { WatchWalletModal } from 'components/WalletModal/WatchWalletModal'\nimport { useAppDispatch } from 'state'\nimport { updateWalletWatched } from 'state/config'\nimport { useWalletWatched } from 'state/hooks'\n\ninterface Props {\n  account?: string\n  login: Login\n  logout: () => void\n}\n\nconst UserBlock: React.FC<Props> = ({ account, login, logout }) => {\n  const accountEllipsis = account ? `${account.substring(0, 4)}...${account.substring(account.length - 4)}` : null\n  const [connectModalVisible, setConnectModalVisible] = useState(false)\n  const [accountModalVisible, setAccountModalVisible] = useState(false)\n  const [watchWalletModalVisible, setWatchWalletModalVisible] = useState(false)\n  const loginFunc = useCallback(\n    (connectorId: ConnectorNames) => {\n      if (connectorId === ConnectorNames.Watch) {\n        setWatchWalletModalVisible(true)\n      } else {\n        login(connectorId)\n      }\n    },\n    [login],\n  )\n  const { isWatching } = useWalletWatched()\n  const dispatch = useAppDispatch()\n  const logoutFunc = useCallback(() => {\n    if (isWatching) {\n      dispatch(updateWalletWatched(''))\n    } else {\n      logout()\n    }\n  }, [logout, isWatching, dispatch])\n\n  return (\n    <div>\n      {account ? (\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          className=\"h-40 center-vh pl15 pr15\"\n          onClick={() => {\n            setAccountModalVisible(true)\n          }}\n        >\n          {accountEllipsis}\n        </Button>\n      ) : (\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          className=\"h-40 center-vh pl15 pr15\"\n          onClick={() => {\n            setConnectModalVisible(true)\n          }}\n        >\n          Connect\n        </Button>\n      )}\n      <ConnectModal visible={connectModalVisible} login={loginFunc} onDismiss={() => setConnectModalVisible(false)} />\n      <WatchWalletModal visible={watchWalletModalVisible} onDismiss={() => setWatchWalletModalVisible(false)} />\n      <AccountModal\n        visible={accountModalVisible}\n        isWatching={isWatching}\n        account={account}\n        logout={logoutFunc}\n        onDismiss={() => setAccountModalVisible(false)}\n      />\n    </div>\n  )\n}\n\nexport default React.memo(UserBlock, (prevProps, nextProps) => prevProps.account === nextProps.account)\n","import { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Universe Finance',\n  description: 'Maximizing your Uniswap V3 Rewards',\n  image: 'https://universe.finance/images/easter-battle.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {}\n","/* eslint-disable no-unneeded-ternary */\nimport { Dropdown, Select } from 'antd'\nimport { TFunction } from 'i18next'\n/* eslint-disable react/require-default-props */\nimport React from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { getDeviceLanguages } from 'i18n'\nimport { useLocation } from 'react-router'\nimport history from 'routerHistory'\n\nimport {\n  CalendarOutlined,\n  DownOutlined,\n  GoldOutlined,\n  RiseOutlined,\n  NotificationOutlined,\n  CloseCircleOutlined,\n  CloseOutlined,\n} from '@ant-design/icons'\n\nimport UserBlock from 'components/header/UserBlock'\nimport { useMobile } from 'components/Responsive'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport useAuth from 'hooks/web3/useAuth'\nimport { useAccount } from 'state/hooks'\n\nexport const TopNotificationBar = () => {\n  const isMobile = useMobile()\n  const items = [\n    {\n      title: 'Looking for talented contributors! Your hard work will be rewarded!',\n      href: 'https://medium.com/@universe.finance/looking-for-talented-contributors-your-hard-work-will-be-rewarded-f7460a533dfe',\n    },\n  ]\n  const num = items.length\n  const width = 100 / num - 1\n\n  return (\n    <div\n      className=\"p15 box-round mt15 mb15 ml5 mr5 position-relative\"\n      style={{ backgroundColor: 'rgba(255,255,255,0.08)' }}\n    >\n      <div className={isMobile ? 'sv-2' : 'cols-evenly sh-3'}>\n        {items.slice(0, 3).map((item) => (\n          <NotificationItem width={width} title={item.title} href={item.href} />\n        ))}\n      </div>\n      <div className=\"abs-right center-vh pr15 fs16\">{/* <CloseCircleOutlined /> */}</div>\n    </div>\n  )\n}\nconst NotificationItem = (props) => {\n  const isMobile = useMobile()\n  return (\n    <a\n      className=\"fc-warn fs14 sh-2 center-vh d-flex hover-fc-warn\"\n      href={props.href}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      style={isMobile ? {} : { width: `${props.width}%` }}\n    >\n      <NotificationOutlined className=\"fs16\" />\n      <div className=\"text-truncate\">{props.title}</div>\n    </a>\n  )\n}\n","/* eslint-disable no-unneeded-ternary */\nimport { Dropdown, Select } from 'antd'\nimport { TFunction } from 'i18next'\n/* eslint-disable react/require-default-props */\nimport React from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { getDeviceLanguages } from 'i18n'\nimport { useLocation } from 'react-router'\nimport history from 'routerHistory'\n\nimport {\n  CalendarOutlined,\n  DownOutlined,\n  GoldOutlined,\n  RiseOutlined,\n  NotificationOutlined,\n  CloseCircleOutlined,\n  CloseOutlined,\n} from '@ant-design/icons'\n\nimport UserBlock from 'components/header/UserBlock'\nimport { useMobile } from 'components/Responsive'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport useAuth from 'hooks/web3/useAuth'\nimport { useAccount } from 'state/hooks'\nimport { TopNotificationBar } from './Announcemtents'\n\nexport const PageMeta = () => {\n  const { pathname } = useLocation()\n  const pageMeta = customMeta[pathname] || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: any\n}\n\nexport const PageContainer = (props) => {\n  return (\n    <div className={`row center-vh ${props.className}`} style={props.style}>\n      <div className=\"col-md-12 col-lg-11 col-xl-10\">{props.children}</div>\n    </div>\n  )\n}\n\nconst Page: React.FC<PageProps> = ({ children, header }) => {\n  const { account } = useAccount()\n  const { login, logout } = useAuth()\n  const isMobile = useMobile()\n\n  return (\n    <>\n      <PageMeta />\n      <div className=\"\">\n        <PageContainer style={{ borderBottom: '1px solid rgba(255,255,255,0.06)' }}>\n          <>\n            {!isMobile && <Navbar account={account} login={login} logout={logout} />}\n            {isMobile && <MobileNavbar account={account} login={login} logout={logout} />}\n          </>\n        </PageContainer>\n        <PageContainer>\n          <>\n            <TopNotificationBar />\n            <PageHeader {...header} />\n            {children}\n          </>\n        </PageContainer>\n        <div className=\"pt30\"></div>\n        <Footer />\n        <div className=\"pt30\"></div>\n      </div>\n    </>\n  )\n}\n\nexport default Page\n\nconst Strong = (props) => <span className=\"fc-primary\">{props.children}</span>\n\nexport const PageHeader = (props) => {\n  const { layout } = props\n  const { i18n, t } = useTranslation()\n  if (layout === 'home') {\n    return (\n      <div className=\"row center-vh\">\n        <div className=\"col-md-12 col-lg-12 col-xl-10\">\n          <div className=\"sv-3 text-center pt50 pb50 d-md-block d-none\">\n            <div className=\"fc-grey fs55 fw-bolder\" style={{ lineHeight: '1.25' }}>\n              {i18n.language === 'zh' ? (\n                <>\n                  <Strong>最大化</Strong> 你的 <Strong>Uniswap V3</Strong> 做市收益\n                </>\n              ) : (\n                <>\n                  <Strong>Maximizing</Strong> your <Strong>Uniswap V3</Strong> Return\n                </>\n              )}\n            </div>\n            <div className=\"fs18 fc-grey sh-3 fw-bolder d-none d-md-block\">\n              <span>{t('global.feature.risk')}</span>\n              <span>•</span>\n              <span>{t('global.feature.management')}</span>\n              <span>•</span>\n              <span>{t('global.feature.rebalance')}</span>\n              <span>•</span>\n              <span>{t('global.feature.reinvest')}</span>\n            </div>\n            <div className=\"fs14 fc-grey-lighter sh-1 d-block d-md-none\">\n              <span>{t('global.feature.risk')}</span>\n              <span>•</span>\n              <span>{t('global.feature.strategy')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const Footer = () => {\n  return (\n    <div className=\"sv-1 pt30\">\n      <div className=\"center-vh\">\n        <div className=\"fc-grey-lighter fs13\">© 2021 Universe Finance. All rights reserved</div>\n      </div>\n    </div>\n  )\n}\n\n// ==============\n// menus\n// ==============\n\nconst MenuItem = (props) => {\n  const { title, des, url, href } = props\n  const isLink = url || href\n  const goto = () => {\n    if (href) {\n      window.open(href)\n    }\n    if (url) {\n      history.push(url)\n    }\n  }\n  return (\n    <div\n      onClick={isLink ? goto : null}\n      className={`cols-between h-50 center-v pl25 pr25 ${isLink ? 'cursor-pointer' : ''}`}\n      style={{ borderBottom: '1px solid rgba(0,0,0,0.15)', minWidth: '120px' }}\n    >\n      <div className=\"sh-2 fc-black  center-v cols-between w-p100\" style={{ opacity: isLink ? 1 : '0.5' }}>\n        <div className=\"fs18 fw-bold sh-2 d-flex center-v\">\n          {/* {icon} */}\n          <div>{title}</div>\n        </div>\n        {des && <div className=\"fs12 ml10\">{des}</div>}\n      </div>\n    </div>\n  )\n}\n\nconst productsMenus = (t: TFunction) => (\n  <div className=\"box-round bg-primary\">\n    <MenuItem icon={<RiseOutlined className=\"fs18\" />} title={t('navbar.link.backtesting')} url=\"/backtest\" />\n    <MenuItem icon={<GoldOutlined className=\"fs18\" />} title={t('navbar.link.smartvault')} url=\"/vaults\" />\n    <MenuItem\n      icon={<CalendarOutlined className=\"fs18\" />}\n      title={t('navbar.link.hedgingvault')}\n      // des=\"developing\"\n      showArrow={false}\n      url={null}\n    />\n    <MenuItem\n      icon={<CalendarOutlined className=\"fs18\" />}\n      title={t('navbar.link.leveragedvault')}\n      // des=\"developing\"\n      showArrow={false}\n      url={null}\n    />\n  </div>\n)\nconst auditsMenus = (t: TFunction) => (\n  <div className=\"box-round bg-primary\">\n    <MenuItem title={t('navbar.link.certik')} href=\"https://www.certik.org/projects/universefinance\" />\n    <MenuItem\n      title=\"Peckshield\"\n      href=\"https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-UniverseFinance-v1.0.pdf\"\n    />\n  </div>\n)\n\nconst docs = (t: TFunction) => [\n  { title: t('navbar.link.userguide'), href: 'https://universefinance.gitbook.io/docs/user-guide' },\n  { title: t('navbar.link.tokenomics'), href: 'https://universefinance.gitbook.io/docs/tokenomics' },\n  { title: t('navbar.link.development'), href: 'https://universefinance.gitbook.io/docs/development' },\n]\nconst docsMenus = (t: TFunction) => (\n  <div className=\"box-round bg-primary\">\n    {docs(t).map((item) => (\n      <MenuItem key={item.title} title={item.title} href={item.href} />\n    ))}\n  </div>\n)\n\nexport const socials = (t: TFunction) => [\n  {\n    title: 'Discord',\n    icon: 'https://alphafinance.io/static/images/footer/discord.svg',\n    href: 'https://discord.gg/d3TcGuwaTp',\n  },\n  {\n    title: 'Twitter',\n    icon: 'https://alphafinance.io/static/images/footer/twitter.svg',\n    href: 'https://twitter.com/Universe_FIN',\n  },\n  {\n    title: 'Github',\n    icon: 'https://alphafinance.io/static/images/footer/github.svg',\n    href: 'https://github.com/UniverseFinance/UniverseFinanceProtocol',\n  },\n  {\n    title: t('navbar.link.blog'),\n    icon: 'https://alphafinance.io/static/images/footer/github.svg',\n    href: 'https://medium.com/@universe.finance',\n  },\n  // { title: 'CoinMarketCap', icon: 'https://alphafinance.io/static/images/footer/coinmarketcap.svg', href: '/' },\n  // { title: 'CoinGecko', icon: 'https://alphafinance.io/static/images/footer/coingecko.svg', href: '/' },\n  // { title: 'DefiPulse', icon: 'https://alphafinance.io/static/images/footer/defipulse.svg', href: '/' },\n]\nconst socialMenus = (t: TFunction) => (\n  <div className=\"box-round bg-primary\">\n    {socials(t).map((item) => (\n      <MenuItem key={item.title} title={item.title} href={item.href} />\n    ))}\n  </div>\n)\n\nexport const Langs = () => {\n  const { i18n } = useTranslation()\n  const onLangChange = (lang: string) => {\n    localStorage.setItem('currentLang', lang)\n    i18n.changeLanguage(lang)\n  }\n  return (\n    <Select className=\"h-50 center-vh\" value={i18n.language} onChange={onLangChange}>\n      <Select.Option value=\"en\">English</Select.Option>\n      <Select.Option value=\"zh\">中文</Select.Option>\n    </Select>\n  )\n}\n\nexport const Navbar = (props) => {\n  const { type } = props\n  const { t } = useTranslation()\n  const langs = getDeviceLanguages()\n  const deviceLang = langs[0]\n  return (\n    <div className=\"center-vh pt20 pb20 h-60 cols-between\">\n      <div>\n        <a className=\"fc-white fs26\" href=\"/\">\n          {t('global.biz')}\n        </a>\n      </div>\n      <div className=\"sh-6 d-flex center-vh\">\n        <Dropdown overlay={productsMenus(t)} placement=\"bottomCenter\">\n          <div className=\"fc-white\">\n            {t('navbar.products')} <DownOutlined className=\"ml5\" />\n          </div>\n        </Dropdown>\n        <div className=\"d-none d-md-block\">\n          <Dropdown overlay={auditsMenus(t)} placement=\"bottomCenter\">\n            <div className=\"fc-white\">\n              {t('navbar.audits')} <DownOutlined className=\"ml5\" />\n            </div>\n          </Dropdown>\n        </div>\n        <div className=\"d-none d-md-block\">\n          <Dropdown overlay={docsMenus(t)} placement=\"bottomCenter\">\n            <div className=\"fc-white\">\n              {t('navbar.docs')} <DownOutlined className=\"ml5\" />\n            </div>\n          </Dropdown>\n        </div>\n        <div className=\"d-none d-md-block\">\n          <Dropdown overlay={socialMenus(t)} placement=\"bottomCenter\">\n            <div className=\"fc-white\">\n              {t('navbar.community')} <DownOutlined className=\"ml5\" />\n            </div>\n          </Dropdown>\n        </div>\n        {deviceLang === 'zh' && (\n          <div className=\"d-none d-md-block\">\n            <Langs />\n          </div>\n        )}\n        {type !== 'onepage' && (\n          <div className=\"d-flex sh-4\">\n            <UserBlock account={props.account} login={props.login} logout={props.logout} />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport const MobileNavbar = (props) => {\n  const { t } = useTranslation()\n  return (\n    <div className=\"center-vh p10 cols-between bb-grey-lighter\">\n      <div>\n        <a className=\"fc-white fs20\" href=\"/\">\n          {t('global.biz')}\n        </a>\n      </div>\n      <div className=\"sh-8 d-flex center-vh\">\n        <div className=\"d-flex sh-4\">\n          <UserBlock account={props.account} login={props.login} logout={props.logout} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","export enum ConnectorNames {\n  Injected = 'injected',\n  WalletConnect = 'walletconnect',\n  BSC = 'bsc',\n  ETH = 'eth',\n  Watch = 'watch',\n}\nexport const connectorLocalStorageKey = 'connectorId'\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getMulticallAddress } from 'utils/addressHelpers'\nimport { ABI } from 'config/abi'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(ABI.Multicall as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n\nexport function createCalls<T>(list: T[], unit: (pool: T) => Call[] | Call) {\n  return list.reduce((memo, pool) => {\n    return memo.concat(unit(pool))\n  }, [])\n}\n\nexport function resolveResults<T>(list: T[], unit: (item: T, index: number) => any) {\n  return list.reduce((memo, item, index) => {\n    return {\n      ...memo,\n      ...unit(item, index),\n    }\n  }, {})\n}\n","import { CHAIN } from 'config/constants/chain'\nimport { wrapSymbol } from './base'\nimport { getGlobal } from './global'\n\nexport function getChainById(chainId: number) {\n  switch (chainId) {\n    case 56:\n    case 97:\n      return CHAIN.BSC\n    case 1:\n    case 3:\n      return CHAIN.ETH\n    default:\n      return CHAIN.UNKNOWN\n  }\n}\n\nexport function getTestChainId(chainId: number) {\n  switch (chainId) {\n    case 56:\n      return 97\n    case 1:\n      return 3\n    default:\n      return 3\n  }\n}\n\nexport function getChainId() {\n  const global = getGlobal()\n\n  return global.chainId\n}\n\nexport function getChain(withDefault = true) {\n  const chainId = getChainId()\n  const chain = getChainById(chainId)\n\n  return withDefault && chain === CHAIN.UNKNOWN ? CHAIN.BSC : chain\n}\n\nexport function getNativeTokenSymbol() {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return 'BNB'\n    case CHAIN.ETH:\n      return 'ETH'\n    default:\n      return 'ETH'\n  }\n}\n\nexport function getNativeTokenSymbols() {\n  const symbol = getNativeTokenSymbol()\n\n  return {\n    symbol,\n    wrapSymbol: wrapSymbol(symbol),\n  }\n}\n\nexport function getChainName() {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return 'BSC'\n    case CHAIN.ETH:\n      return 'Ethereum'\n    default:\n      return 'Ethereum'\n  }\n}\n\nexport function isNativeToken(symbol: string) {\n  const nativeSymbol = getNativeTokenSymbol()\n  return symbol === nativeSymbol\n}\n\nexport function isWrappedNativeToken(symbol: string) {\n  const nativeSymbol = getNativeTokenSymbol()\n\n  return symbol === `w${nativeSymbol}` || symbol === `W${nativeSymbol}`\n}\n","export default {\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  weth: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n}\n","export default {\n  mulltiCall: {\n    1: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    3: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n  },\n  weth: {\n    1: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n    3: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  },\n}\n","import { CHAIN } from './chain'\nimport BSCContracts from './bsc/contracts'\nimport ETHContracts from './eth/contracts'\nimport { getChain } from 'utils/chain'\n\nexport default function getContracts() {\n  const chain = getChain()\n  switch (chain) {\n    case CHAIN.BSC:\n      return BSCContracts\n    case CHAIN.ETH:\n    default:\n      return ETHContracts\n  }\n}\n","import { Address } from 'config/constants/types'\nimport { getChainId } from './chain'\nimport getContracts from 'config/constants/contracts'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 1\n  const chainId = Number(getChainId())\n\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport function isNativeAddress(address: string) {\n  return address === '0x0000000000000000000000000000000000000000'\n}\n\nexport const getMulticallAddress = () => {\n  const addresses = getContracts()\n\n  return getAddress(addresses.mulltiCall)\n}\n\nexport const getWethAddress = () => {\n  const addresses = getContracts()\n\n  return getAddress(addresses.weth)\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport { useSelector } from 'react-redux'\nimport { State } from '../types'\nimport { getDispatch } from '../utils'\n\nconst initialState = {\n  data: {},\n}\n\nexport const layersSlice = createSlice({\n  name: 'layers',\n  initialState,\n  reducers: {\n    show: (state, action) => {\n      const { payload = {} } = action\n      const layerId = payload.id\n      const oldLayer = state.data[layerId] || {}\n      state.data[layerId] = {\n        ...oldLayer,\n        ...payload,\n        visible: true,\n      }\n    },\n    hide: (state, action) => {\n      const { payload = {} } = action\n      const layerId = payload.id\n      const oldLayer = state.data[layerId] || {}\n      state.data[layerId] = {\n        ...oldLayer,\n        ...payload,\n        visible: false,\n      }\n    },\n  },\n})\n\nexport default layersSlice.reducer\n\n// Actions\nexport const showLayerAction = (payload) => async (dispatch) => {\n  //   console.log('layers showLayer',payload)\n  const showAction = layersSlice.actions && layersSlice.actions.show\n  dispatch(showAction(payload))\n}\nexport const hideLayerAction = (payload) => async (dispatch) => {\n  const hideAction = layersSlice.actions && layersSlice.actions.hide\n  dispatch(hideAction(payload))\n}\n\n// Hooks\nexport const useLayer = (layerId) => {\n  const layers = useSelector((state: State) => state.layers.data) || {}\n  return layers[layerId] || {}\n}\n\n// Action Helpers\nexport const showLayer = (payload, dispatch?) => {\n  dispatch = dispatch || getDispatch()\n  if (dispatch) {\n    dispatch(showLayerAction(payload))\n  } else {\n    console.error('dispatch is required but got null')\n  }\n}\nexport const hideLayer = (payload, dispatch?) => {\n  dispatch = dispatch || getDispatch()\n  if (dispatch) {\n    dispatch(hideLayerAction(payload))\n  } else {\n    console.error('dispatch is required but got null')\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport configReducer from './config'\nimport pricesReducer from './prices'\nimport poolsReducer from './pools'\nimport blockReducer from './block'\nimport layersReducer from './layers'\nimport toastReducer from './toasts'\nimport tokenReducer from './tokens'\n// import backtestReducer from './backtest'\nimport { setStore } from './utils'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    config: configReducer,\n    prices: pricesReducer,\n    layers: layersReducer,\n    block: blockReducer,\n    pools: poolsReducer,\n    toasts: toastReducer,\n    tokens: tokenReducer,\n    // backtest: backtestReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nsetStore(store)\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport default store\n","import BigNumber from 'bignumber.js'\n\nexport interface Address {\n  1?: string\n  3?: string\n  56?: string\n  97?: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  icon?: string\n  internal?: boolean\n  coingeckoId?: string\n}\n\nexport type VToken = Token\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description: string\n  image: string\n}\n\nexport enum PoolType {\n  Public = 0,\n  Private,\n}\n\nexport interface PoolInfo {\n  actualApy: {\n    last24hApy: string\n    lastWeekApy: string\n    fullTimeApy: string\n  }\n  depositAble: number\n  depositTime: number\n  dexName: string\n  deposits: {\n    token0: number\n    token1: number\n  }\n  feeReturn: number\n  feeApr: number\n  feeBasedApy: {\n    last24hApy: string\n    lastWeekApy: string\n    lastMonthApy: string\n    fullTimeApy: string\n  }\n  initLowerTick: string\n  initPrice: string\n  initUpperTick: string\n  last24HourNetApr: number\n  lastMonthApr: number\n  lastWeekNetApr: number\n  lifeApr: number\n  stale?: boolean\n  lowerTick: string\n  managementFee: string\n  performanceFee: string\n  poolAddress: string\n  poolName: string\n  profits: {\n    token0: number\n    token1: number\n  }\n  rebalanceTime: number\n  reinvestTime: number\n  strategyName: string\n  strategyAddress: string\n  strategyStartTime: string\n  state: number\n  token0: Token\n  token1: Token\n  tier: string\n  upperick: string\n  vaultAddress: string\n  vaultId: number\n  poolType: PoolType\n  whiteList: string[]\n}\n\nexport interface BlockInfo {\n  BLOCK_TIME: number\n  TOKEN_PER_BLOCK: BigNumber\n  BLOCKS_PER_YEAR: BigNumber\n}\n\nexport interface ITokens {\n  [name: string]: Token\n}\n","import BigNumber from 'bignumber.js'\nimport { PoolInfo, PoolType, Token } from 'config/constants/types'\nimport { PoolModel } from 'service/model'\nimport { Pool, PoolData, PriceApiListThunk } from 'state/types'\nimport { getBalanceNumber } from './formatBalance'\n\nexport function getPoolName(pool: PoolModel) {\n  const { token0, token1, tier, vaultId: id } = pool\n\n  return [token0, token1, tier.replace('%', ''), id].join('_')\n}\n\nexport function getPoolUser(pool: Pool) {\n  return {\n    share: new BigNumber(pool.userData?.share ?? 0),\n    token0Allowance: new BigNumber(pool.userData?.token0Allowance ?? 0),\n    token0Balance: new BigNumber(pool.userData?.token0Balance ?? 0),\n    token0Position: new BigNumber(pool.userData?.token0Position ?? 0),\n    token1Allowance: new BigNumber(pool.userData?.token1Allowance ?? 0),\n    token1Balance: new BigNumber(pool.userData?.token1Balance ?? 0),\n    token1Position: new BigNumber(pool.userData?.token1Position ?? 0),\n    deposits: pool.userData?.deposits\n      ? {\n          token0: new BigNumber(pool.userData?.deposits?.token0 ?? 0),\n          token1: new BigNumber(pool.userData?.deposits?.token1 ?? 0),\n        }\n      : {\n          token0: new BigNumber(0),\n          token1: new BigNumber(0),\n        },\n    positions: pool.userData?.positions\n      ? {\n          token0: pool.userData?.positions?.token0,\n          token1: pool.userData?.positions?.token1,\n        }\n      : {\n          token0: 0,\n          token1: 0,\n        },\n  }\n}\n\nexport function getPoolData(pool: Pool, prices: PriceApiListThunk): PoolData {\n  const userData = getPoolUser(pool)\n  const { token0, token1 } = pool\n  const depositsValue = calcPoolTokensValue(pool.deposits, token0, token1, prices)\n  const profitsValue = calcPoolTokensValue(pool.profits, token0, token1, prices)\n  const userDepositsValue = calcPoolTokensValue(\n    pool.userData?.deposits ?? { token0: 0, token1: 0 },\n    token0,\n    token1,\n    prices,\n  )\n  const userPositionValue = calcValue(pool.userData?.positions ?? { token0: 0, token1: 0 }, token0, token1, prices)\n\n  return {\n    ...pool,\n    depositsValue,\n    profitsValue,\n    userData: {\n      ...userData,\n      depositsValue: userDepositsValue,\n      positionValue: userPositionValue,\n      profitsValue: 0,\n    },\n  }\n}\n\ninterface TokensAmount {\n  token0: BigNumber | number\n  token1: BigNumber | number\n}\n\nexport function calcValue(records: TokensAmount, t0: Token, t1: Token, prices: PriceApiListThunk) {\n  const token0Amount = records.token0 as number\n  const token1Amount = records.token1 as number\n  const token0Price = prices[t0.symbol]\n  const token1Price = prices[t1.symbol]\n  const value = token0Amount * token0Price + token1Amount * token1Price\n\n  return value || 0\n}\n\nexport function calcPoolTokensValue(deposits: TokensAmount, t0: Token, t1: Token, prices: PriceApiListThunk) {\n  const { token0, token1 } = deposits\n\n  return calcTokensValue(new BigNumber(token0 || 0), new BigNumber(token1 || 0), t0, t1, prices)\n}\n\nfunction calcTokensValue(t0Balance: BigNumber, t1Balance: BigNumber, t0: Token, t1: Token, prices: PriceApiListThunk) {\n  const token0Amount = getBalanceNumber(t0Balance, t0.decimals)\n  const token1Amount = getBalanceNumber(t1Balance, t1.decimals)\n  const token0Price = prices[t0.symbol]\n  const token1Price = prices[t1.symbol]\n  const value = token0Amount * token0Price + token1Amount * token1Price\n\n  return value || 0\n}\n\nexport function getTokensAmount(amount0: string, amount1: string, token0: Token, token1: Token) {\n  const ret: string[] = []\n\n  if (Number(amount0)) {\n    ret.push(`${amount0} ${token0.symbol}`)\n  }\n  if (Number(amount1)) {\n    ret.push(`${amount1} ${token1.symbol}`)\n  }\n\n  return ret.length ? ret.join(' + ') : '---'\n}\n\nexport const validPoolFilter = (pool: PoolInfo) => pool.state !== 1\n\nexport function filterPool(pools: PoolInfo[]) {\n  return pools.filter(validPoolFilter)\n}\n\nexport function checkDepositAble(depositAble: number, poolType: PoolType, whiteList: string[], account = '') {\n  if (depositAble === 1) {\n    if (poolType === PoolType.Private) {\n      return whiteList.includes(account) || whiteList.includes(account.toLowerCase())\n    } else {\n      return true\n    }\n  } else {\n    return false\n  }\n}\n","import { DEFAULT_CHAIN_ID, INJECTED_CHAIN_KEY } from 'config/constants/chain'\n\nconst gloablKey = '__OG_GLOBAL__'\n\nexport interface GlobalState {\n  ready: boolean\n  chainId: number\n}\n\ndeclare global {\n  interface Window {\n    __OG_GLOBAL__: GlobalState\n  }\n}\n\nfunction getDefaultInjectedChainId() {\n  const prevChainId = window.localStorage.getItem(INJECTED_CHAIN_KEY)\n\n  if (prevChainId) {\n    return Number(prevChainId) || DEFAULT_CHAIN_ID\n  } else {\n    return DEFAULT_CHAIN_ID\n  }\n}\n\nexport function storeInjectedChainId(id: string) {\n  window.localStorage.setItem(INJECTED_CHAIN_KEY, id)\n}\n\nexport function getDefaultChaindId(): number {\n  const connectorId = window.localStorage.getItem('connectorId')\n\n  if (connectorId === 'walletconnect') {\n    try {\n      const data = JSON.parse(window.localStorage.getItem('walletconnect'))\n\n      return data.chainId || DEFAULT_CHAIN_ID\n    } catch (error) {\n      return DEFAULT_CHAIN_ID\n    }\n  } else {\n    return getDefaultInjectedChainId()\n  }\n}\n\nexport function initGlobal(chainId?: number) {\n  const id = chainId || getDefaultChaindId()\n  const cid = [56, 97, 128, 256, 137, 80001].includes(id) ? id : DEFAULT_CHAIN_ID\n\n  window[gloablKey] = {\n    ready: true,\n    chainId: cid,\n  }\n\n  storeInjectedChainId(String(id))\n\n  return window[gloablKey]\n}\n\nexport function getGlobal() {\n  if (!isGlobalReady()) {\n    initGlobal()\n  }\n  return window[gloablKey]\n}\n\nexport function isGlobalReady() {\n  return window[gloablKey]?.ready ?? false\n}\n"],"sourceRoot":""}